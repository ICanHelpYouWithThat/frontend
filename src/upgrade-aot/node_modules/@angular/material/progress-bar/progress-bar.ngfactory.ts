/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from '@angular/core/src/linker/ng_module_factory';
import * as import1 from '@angular/material/progress-bar/progress-bar';
import * as import2 from '@angular/common/src/common_module';
import * as import3 from '@angular/common/src/localization';
import * as import4 from '@angular/core/src/di/injector';
import * as import5 from '@angular/core/src/i18n/tokens';
import * as import6 from '@angular/core/src/change_detection/change_detection';
import * as import7 from '@angular/core/src/linker/view';
import * as import8 from '@angular/core/src/linker/view_utils';
import * as import9 from '@angular/core/src/linker/debug_context';
import * as import10 from '@angular/core/src/render/api';
import * as import11 from '@angular/core/src/metadata/view';
import * as import12 from '@angular/core/src/linker/view_type';
import * as import13 from '@angular/core/src/linker/component_factory';
import * as import14 from './progress-bar.css.shim';
import * as import15 from '@angular/common/src/directives/ng_style';
import * as import16 from '../../common/src/directives/ng_style.ngfactory';
import * as import17 from '@angular/core/src/change_detection/differs/keyvalue_differs';
import * as import18 from '@angular/core/src/linker/element_ref';
class MdProgressBarModuleInjector extends import0.NgModuleInjector<import1.MdProgressBarModule> {
  _CommonModule_0:import2.CommonModule;
  _MdProgressBarModule_1:import1.MdProgressBarModule;
  __NgLocalization_2:import3.NgLocaleLocalization;
  constructor(parent:import4.Injector) {
    super(parent,([] as any[]),([] as any[]));
  }
  get _NgLocalization_2():import3.NgLocaleLocalization {
    if ((this.__NgLocalization_2 == null)) { (this.__NgLocalization_2 = new import3.NgLocaleLocalization(this.parent.get(import5.LOCALE_ID))); }
    return this.__NgLocalization_2;
  }
  createInternal():import1.MdProgressBarModule {
    this._CommonModule_0 = new import2.CommonModule();
    this._MdProgressBarModule_1 = new import1.MdProgressBarModule();
    return this._MdProgressBarModule_1;
  }
  getInternal(token:any,notFoundResult:any):any {
    if ((token === import2.CommonModule)) { return this._CommonModule_0; }
    if ((token === import1.MdProgressBarModule)) { return this._MdProgressBarModule_1; }
    if ((token === import3.NgLocalization)) { return this._NgLocalization_2; }
    return notFoundResult;
  }
  destroyInternal():void {
  }
}
export const MdProgressBarModuleNgFactory:import0.NgModuleFactory<import1.MdProgressBarModule> = new import0.NgModuleFactory(MdProgressBarModuleInjector,import1.MdProgressBarModule);
export class Wrapper_MdProgressBar {
  /*private*/ _eventHandler:Function;
  context:import1.MdProgressBar;
  /*private*/ _changed:boolean;
  /*private*/ _expr_0:any;
  /*private*/ _expr_1:any;
  /*private*/ _expr_2:any;
  /*private*/ _expr_3:any;
  /*private*/ _expr_4:any;
  constructor() {
    this._changed = false;
    this.context = new import1.MdProgressBar();
    this._expr_0 = import6.UNINITIALIZED;
    this._expr_1 = import6.UNINITIALIZED;
    this._expr_2 = import6.UNINITIALIZED;
    this._expr_3 = import6.UNINITIALIZED;
    this._expr_4 = import6.UNINITIALIZED;
  }
  ngOnDetach(view:import7.AppView<any>,componentView:import7.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
  }
  check_value(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import8.checkBinding(throwOnChange,this._expr_0,currValue))) {
      this._changed = true;
      this.context.value = currValue;
      this._expr_0 = currValue;
    }
  }
  check_bufferValue(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import8.checkBinding(throwOnChange,this._expr_1,currValue))) {
      this._changed = true;
      this.context.bufferValue = currValue;
      this._expr_1 = currValue;
    }
  }
  check_mode(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import8.checkBinding(throwOnChange,this._expr_2,currValue))) {
      this._changed = true;
      this.context.mode = currValue;
      this._expr_2 = currValue;
    }
  }
  ngDoCheck(view:import7.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    return changed;
  }
  checkHost(view:import7.AppView<any>,componentView:import7.AppView<any>,el:any,throwOnChange:boolean):void {
    const currVal_3:any = this.context.value;
    if (import8.checkBinding(throwOnChange,this._expr_3,currVal_3)) {
      view.renderer.setElementAttribute(el,'aria-valuenow',((currVal_3 == null)? (null as any): currVal_3.toString()));
      this._expr_3 = currVal_3;
    }
    const currVal_4:any = this.context.mode;
    if (import8.checkBinding(throwOnChange,this._expr_4,currVal_4)) {
      view.renderer.setElementAttribute(el,'mode',((currVal_4 == null)? (null as any): currVal_4.toString()));
      this._expr_4 = currVal_4;
    }
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import7.AppView<any>,_eventHandler:any):void {
    this._eventHandler = _eventHandler;
  }
}
const nodeDebugInfos_MdProgressBar_Host0:import9.StaticNodeDebugInfo[] = [new import9.StaticNodeDebugInfo([import1.MdProgressBar],import1.MdProgressBar,{})];
var renderType_MdProgressBar_Host:import10.RenderComponentType = import8.createRenderComponentType('',0,import11.ViewEncapsulation.None,([] as any[]),{});
class View_MdProgressBar_Host0 extends import7.DebugAppView<any> {
  _el_0:any;
  compView_0:import7.AppView<import1.MdProgressBar>;
  _MdProgressBar_0_3:Wrapper_MdProgressBar;
  constructor(viewUtils:import8.ViewUtils,parentView:import7.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_MdProgressBar_Host0,renderType_MdProgressBar_Host,import12.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import6.ChangeDetectorStatus.CheckAlways,nodeDebugInfos_MdProgressBar_Host0);
  }
  createInternal(rootSelector:string):import13.ComponentRef<any> {
    this._el_0 = import8.selectOrCreateRenderHostElement(this.renderer,'md-progress-bar',new import8.InlineArray8(6,'aria-valuemax','100','aria-valuemin','0','role','progressbar'),rootSelector,this.debug(0,0,0));
    this.compView_0 = new View_MdProgressBar0(this.viewUtils,this,0,this._el_0);
    this._MdProgressBar_0_3 = new Wrapper_MdProgressBar();
    this.compView_0.create(this._MdProgressBar_0_3.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return new import13.ComponentRef_<any>(0,this,this._el_0,this._MdProgressBar_0_3.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import1.MdProgressBar) && (0 === requestNodeIndex))) { return this._MdProgressBar_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this.debug(0,0,0);
    if (this._MdProgressBar_0_3.ngDoCheck(this,this._el_0,throwOnChange)) { this.compView_0.markAsCheckOnce(); }
    this._MdProgressBar_0_3.checkHost(this,this.compView_0,this._el_0,throwOnChange);
    this.compView_0.detectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
export const MdProgressBarNgFactory:import13.ComponentFactory<import1.MdProgressBar> = new import13.ComponentFactory<import1.MdProgressBar>('md-progress-bar',View_MdProgressBar_Host0,import1.MdProgressBar);
const styles_MdProgressBar:any[] = [import14.styles];
const nodeDebugInfos_MdProgressBar0:import9.StaticNodeDebugInfo[] = [
  new import9.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import9.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import9.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import9.StaticNodeDebugInfo([import15.NgStyle],(null as any),{}),
  new import9.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import9.StaticNodeDebugInfo([import15.NgStyle],(null as any),{}),
  new import9.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import9.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import9.StaticNodeDebugInfo(([] as any[]),(null as any),{})
]
;
var renderType_MdProgressBar:import10.RenderComponentType = import8.createRenderComponentType('/Users/jessebowden/ichuwt/frontend/node_modules/@angular/material/progress-bar/progress-bar.html',0,import11.ViewEncapsulation.Emulated,styles_MdProgressBar,{});
export class View_MdProgressBar0 extends import7.DebugAppView<import1.MdProgressBar> {
  _text_0:any;
  _el_1:any;
  _text_2:any;
  _el_3:any;
  _NgStyle_3_3:import16.Wrapper_NgStyle;
  _text_4:any;
  _el_5:any;
  _NgStyle_5_3:import16.Wrapper_NgStyle;
  _text_6:any;
  _el_7:any;
  _text_8:any;
  constructor(viewUtils:import8.ViewUtils,parentView:import7.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_MdProgressBar0,renderType_MdProgressBar,import12.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import6.ChangeDetectorStatus.CheckOnce,nodeDebugInfos_MdProgressBar0);
  }
  createInternal(rootSelector:string):import13.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this._text_0 = this.renderer.createText(parentRenderNode,'\n',this.debug(0,0,118));
    this._el_1 = import8.createRenderElement(this.renderer,parentRenderNode,'div',new import8.InlineArray2(2,'class','md-progress-bar-background'),this.debug(1,1,0));
    this._text_2 = this.renderer.createText(parentRenderNode,'\n',this.debug(2,1,46));
    this._el_3 = import8.createRenderElement(this.renderer,parentRenderNode,'div',new import8.InlineArray2(2,'class','md-progress-bar-buffer'),this.debug(3,2,0));
    this._NgStyle_3_3 = new import16.Wrapper_NgStyle(this.parentView.injectorGet(import17.KeyValueDiffers,this.parentIndex),new import18.ElementRef(this._el_3),this.renderer);
    this._text_4 = this.renderer.createText(parentRenderNode,'\n',this.debug(4,2,73));
    this._el_5 = import8.createRenderElement(this.renderer,parentRenderNode,'div',new import8.InlineArray2(2,'class','md-progress-bar-primary md-progress-bar-fill'),this.debug(5,3,0));
    this._NgStyle_5_3 = new import16.Wrapper_NgStyle(this.parentView.injectorGet(import17.KeyValueDiffers,this.parentIndex),new import18.ElementRef(this._el_5),this.renderer);
    this._text_6 = this.renderer.createText(parentRenderNode,'\n',this.debug(6,3,96));
    this._el_7 = import8.createRenderElement(this.renderer,parentRenderNode,'div',new import8.InlineArray2(2,'class','md-progress-bar-secondary md-progress-bar-fill'),this.debug(7,4,0));
    this._text_8 = this.renderer.createText(parentRenderNode,'\n',this.debug(8,4,66));
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [
      this._text_0,
      this._el_1,
      this._text_2,
      this._el_3,
      this._text_4,
      this._el_5,
      this._text_6,
      this._el_7,
      this._text_8
    ]
    ),(null as any));
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import15.NgStyle) && (3 === requestNodeIndex))) { return this._NgStyle_3_3.context; }
    if (((token === import15.NgStyle) && (5 === requestNodeIndex))) { return this._NgStyle_5_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this.debug(3,2,36);
    const currVal_3_0_0:any = this.context._bufferTransform();
    this._NgStyle_3_3.check_ngStyle(currVal_3_0_0,throwOnChange,false);
    this._NgStyle_3_3.ngDoCheck(this,this._el_3,throwOnChange);
    this.debug(5,3,58);
    const currVal_5_0_0:any = this.context._primaryTransform();
    this._NgStyle_5_3.check_ngStyle(currVal_5_0_0,throwOnChange,false);
    this._NgStyle_5_3.ngDoCheck(this,this._el_5,throwOnChange);
  }
  destroyInternal():void {
    this.debug(3,2,0);
  }
}