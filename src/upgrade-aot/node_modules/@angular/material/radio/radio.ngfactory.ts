/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from '@angular/core/src/linker/ng_module_factory';
import * as import1 from '@angular/material/radio/radio';
import * as import2 from '@angular/common/src/common_module';
import * as import3 from '@angular/material/core/ripple/ripple';
import * as import4 from '@angular/common/src/localization';
import * as import5 from '@angular/core/src/di/injector';
import * as import6 from '@angular/core/src/i18n/tokens';
import * as import7 from '@angular/core/src/change_detection/change_detection';
import * as import8 from '@angular/core/src/linker/view';
import * as import9 from '@angular/core/src/linker/view_utils';
import * as import10 from '@angular/core/src/linker/debug_context';
import * as import11 from '@angular/core/src/render/api';
import * as import12 from '@angular/core/src/metadata/view';
import * as import13 from '@angular/core/src/linker/view_type';
import * as import14 from '@angular/core/src/linker/component_factory';
import * as import15 from '@angular/core/src/linker/element_ref';
import * as import16 from '@angular/material/core/coordination/unique-selection-dispatcher';
import * as import17 from './radio.css';
import * as import18 from '@angular/core/src/linker/template_ref';
import * as import19 from '@angular/common/src/directives/ng_if';
import * as import20 from '@angular/core/src/linker/view_container';
import * as import21 from '../../common/src/directives/ng_if.ngfactory';
import * as import22 from '../core/ripple/ripple.ngfactory';
class MdRadioModuleInjector extends import0.NgModuleInjector<import1.MdRadioModule> {
  _CommonModule_0:import2.CommonModule;
  _MdRippleModule_1:import3.MdRippleModule;
  _MdRadioModule_2:import1.MdRadioModule;
  __NgLocalization_3:import4.NgLocaleLocalization;
  constructor(parent:import5.Injector) {
    super(parent,([] as any[]),([] as any[]));
  }
  get _NgLocalization_3():import4.NgLocaleLocalization {
    if ((this.__NgLocalization_3 == null)) { (this.__NgLocalization_3 = new import4.NgLocaleLocalization(this.parent.get(import6.LOCALE_ID))); }
    return this.__NgLocalization_3;
  }
  createInternal():import1.MdRadioModule {
    this._CommonModule_0 = new import2.CommonModule();
    this._MdRippleModule_1 = new import3.MdRippleModule();
    this._MdRadioModule_2 = new import1.MdRadioModule();
    return this._MdRadioModule_2;
  }
  getInternal(token:any,notFoundResult:any):any {
    if ((token === import2.CommonModule)) { return this._CommonModule_0; }
    if ((token === import3.MdRippleModule)) { return this._MdRippleModule_1; }
    if ((token === import1.MdRadioModule)) { return this._MdRadioModule_2; }
    if ((token === import4.NgLocalization)) { return this._NgLocalization_3; }
    return notFoundResult;
  }
  destroyInternal():void {
  }
}
export const MdRadioModuleNgFactory:import0.NgModuleFactory<import1.MdRadioModule> = new import0.NgModuleFactory(MdRadioModuleInjector,import1.MdRadioModule);
export class Wrapper_MdRadioGroup {
  /*private*/ _eventHandler:Function;
  context:import1.MdRadioGroup;
  /*private*/ _changed:boolean;
  /*private*/ _expr_0:any;
  /*private*/ _expr_1:any;
  /*private*/ _expr_2:any;
  /*private*/ _expr_3:any;
  /*private*/ _expr_4:any;
  subscription0:any;
  constructor() {
    this._changed = false;
    this.context = new import1.MdRadioGroup();
    this._expr_0 = import7.UNINITIALIZED;
    this._expr_1 = import7.UNINITIALIZED;
    this._expr_2 = import7.UNINITIALIZED;
    this._expr_3 = import7.UNINITIALIZED;
    this._expr_4 = import7.UNINITIALIZED;
  }
  ngOnDetach(view:import8.AppView<any>,componentView:import8.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
    (this.subscription0 && this.subscription0.unsubscribe());
  }
  check_name(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import9.checkBinding(throwOnChange,this._expr_0,currValue))) {
      this._changed = true;
      this.context.name = currValue;
      this._expr_0 = currValue;
    }
  }
  check_align(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import9.checkBinding(throwOnChange,this._expr_1,currValue))) {
      this._changed = true;
      this.context.align = currValue;
      this._expr_1 = currValue;
    }
  }
  check_disabled(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import9.checkBinding(throwOnChange,this._expr_2,currValue))) {
      this._changed = true;
      this.context.disabled = currValue;
      this._expr_2 = currValue;
    }
  }
  check_value(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import9.checkBinding(throwOnChange,this._expr_3,currValue))) {
      this._changed = true;
      this.context.value = currValue;
      this._expr_3 = currValue;
    }
  }
  check_selected(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import9.checkBinding(throwOnChange,this._expr_4,currValue))) {
      this._changed = true;
      this.context.selected = currValue;
      this._expr_4 = currValue;
    }
  }
  ngDoCheck(view:import8.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    return changed;
  }
  checkHost(view:import8.AppView<any>,componentView:import8.AppView<any>,el:any,throwOnChange:boolean):void {
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import8.AppView<any>,_eventHandler:any,emit0:boolean):void {
    this._eventHandler = _eventHandler;
    if (emit0) { (this.subscription0 = this.context.change.subscribe(_eventHandler.bind(view,'change'))); }
  }
}
export class Wrapper_MdRadioButton {
  /*private*/ _eventHandler:Function;
  context:import1.MdRadioButton;
  /*private*/ _changed:boolean;
  /*private*/ _expr_0:any;
  /*private*/ _expr_1:any;
  /*private*/ _expr_2:any;
  /*private*/ _expr_3:any;
  /*private*/ _expr_4:any;
  /*private*/ _expr_5:any;
  /*private*/ _expr_6:any;
  /*private*/ _expr_7:any;
  /*private*/ _expr_8:any;
  /*private*/ _expr_9:any;
  /*private*/ _expr_10:any;
  /*private*/ _expr_11:any;
  /*private*/ _expr_12:any;
  subscription0:any;
  constructor(p0:any,p1:any,p2:any) {
    this._changed = false;
    this.context = new import1.MdRadioButton(p0,p1,p2);
    this._expr_0 = import7.UNINITIALIZED;
    this._expr_1 = import7.UNINITIALIZED;
    this._expr_2 = import7.UNINITIALIZED;
    this._expr_3 = import7.UNINITIALIZED;
    this._expr_4 = import7.UNINITIALIZED;
    this._expr_5 = import7.UNINITIALIZED;
    this._expr_6 = import7.UNINITIALIZED;
    this._expr_7 = import7.UNINITIALIZED;
    this._expr_8 = import7.UNINITIALIZED;
    this._expr_9 = import7.UNINITIALIZED;
    this._expr_10 = import7.UNINITIALIZED;
    this._expr_11 = import7.UNINITIALIZED;
    this._expr_12 = import7.UNINITIALIZED;
  }
  ngOnDetach(view:import8.AppView<any>,componentView:import8.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
    (this.subscription0 && this.subscription0.unsubscribe());
  }
  check_id(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import9.checkBinding(throwOnChange,this._expr_0,currValue))) {
      this._changed = true;
      this.context.id = currValue;
      this._expr_0 = currValue;
    }
  }
  check_name(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import9.checkBinding(throwOnChange,this._expr_1,currValue))) {
      this._changed = true;
      this.context.name = currValue;
      this._expr_1 = currValue;
    }
  }
  check_ariaLabel(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import9.checkBinding(throwOnChange,this._expr_2,currValue))) {
      this._changed = true;
      this.context.ariaLabel = currValue;
      this._expr_2 = currValue;
    }
  }
  check_ariaLabelledby(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import9.checkBinding(throwOnChange,this._expr_3,currValue))) {
      this._changed = true;
      this.context.ariaLabelledby = currValue;
      this._expr_3 = currValue;
    }
  }
  check_disableRipple(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import9.checkBinding(throwOnChange,this._expr_4,currValue))) {
      this._changed = true;
      this.context.disableRipple = currValue;
      this._expr_4 = currValue;
    }
  }
  check_checked(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import9.checkBinding(throwOnChange,this._expr_5,currValue))) {
      this._changed = true;
      this.context.checked = currValue;
      this._expr_5 = currValue;
    }
  }
  check_value(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import9.checkBinding(throwOnChange,this._expr_6,currValue))) {
      this._changed = true;
      this.context.value = currValue;
      this._expr_6 = currValue;
    }
  }
  check_align(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import9.checkBinding(throwOnChange,this._expr_7,currValue))) {
      this._changed = true;
      this.context.align = currValue;
      this._expr_7 = currValue;
    }
  }
  check_disabled(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import9.checkBinding(throwOnChange,this._expr_8,currValue))) {
      this._changed = true;
      this.context.disabled = currValue;
      this._expr_8 = currValue;
    }
  }
  ngDoCheck(view:import8.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    if (!throwOnChange) { if ((view.numberOfChecks === 0)) { this.context.ngOnInit(); } }
    return changed;
  }
  checkHost(view:import8.AppView<any>,componentView:import8.AppView<any>,el:any,throwOnChange:boolean):void {
    const currVal_9:any = this.context._isFocused;
    if (import9.checkBinding(throwOnChange,this._expr_9,currVal_9)) {
      view.renderer.setElementClass(el,'md-radio-focused',currVal_9);
      this._expr_9 = currVal_9;
    }
    const currVal_10:any = this.context.id;
    if (import9.checkBinding(throwOnChange,this._expr_10,currVal_10)) {
      view.renderer.setElementProperty(el,'id',currVal_10);
      this._expr_10 = currVal_10;
    }
    const currVal_11:any = this.context.checked;
    if (import9.checkBinding(throwOnChange,this._expr_11,currVal_11)) {
      view.renderer.setElementClass(el,'md-radio-checked',currVal_11);
      this._expr_11 = currVal_11;
    }
    const currVal_12:any = this.context.disabled;
    if (import9.checkBinding(throwOnChange,this._expr_12,currVal_12)) {
      view.renderer.setElementClass(el,'md-radio-disabled',currVal_12);
      this._expr_12 = currVal_12;
    }
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import8.AppView<any>,_eventHandler:any,emit0:boolean):void {
    this._eventHandler = _eventHandler;
    if (emit0) { (this.subscription0 = this.context.change.subscribe(_eventHandler.bind(view,'change'))); }
  }
}
const nodeDebugInfos_MdRadioButton_Host0:import10.StaticNodeDebugInfo[] = [new import10.StaticNodeDebugInfo([import1.MdRadioButton],import1.MdRadioButton,{})];
var renderType_MdRadioButton_Host:import11.RenderComponentType = import9.createRenderComponentType('',0,import12.ViewEncapsulation.None,([] as any[]),{});
class View_MdRadioButton_Host0 extends import8.DebugAppView<any> {
  _el_0:any;
  compView_0:import8.AppView<import1.MdRadioButton>;
  _MdRadioButton_0_3:Wrapper_MdRadioButton;
  constructor(viewUtils:import9.ViewUtils,parentView:import8.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_MdRadioButton_Host0,renderType_MdRadioButton_Host,import13.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways,nodeDebugInfos_MdRadioButton_Host0);
  }
  createInternal(rootSelector:string):import14.ComponentRef<any> {
    this._el_0 = import9.selectOrCreateRenderHostElement(this.renderer,'md-radio-button',import9.EMPTY_INLINE_ARRAY,rootSelector,this.debug(0,0,0));
    this.compView_0 = new View_MdRadioButton0(this.viewUtils,this,0,this._el_0);
    this._MdRadioButton_0_3 = new Wrapper_MdRadioButton(this.injectorGet(import1.MdRadioGroup,this.parentIndex,(null as any)),new import15.ElementRef(this._el_0),this.injectorGet(import16.MdUniqueSelectionDispatcher,this.parentIndex));
    this.compView_0.create(this._MdRadioButton_0_3.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return new import14.ComponentRef_<any>(0,this,this._el_0,this._MdRadioButton_0_3.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import1.MdRadioButton) && (0 === requestNodeIndex))) { return this._MdRadioButton_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this.debug(0,0,0);
    this._MdRadioButton_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    this._MdRadioButton_0_3.checkHost(this,this.compView_0,this._el_0,throwOnChange);
    this.compView_0.detectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
    this._MdRadioButton_0_3.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  visitProjectableNodesInternal(nodeIndex:number,ngContentIndex:number,cb:any,ctx:any):void {
    if (((nodeIndex == 0) && (ngContentIndex == 0))) {  }
  }
}
export const MdRadioButtonNgFactory:import14.ComponentFactory<import1.MdRadioButton> = new import14.ComponentFactory<import1.MdRadioButton>('md-radio-button',View_MdRadioButton_Host0,import1.MdRadioButton);
const styles_MdRadioButton:any[] = [import17.styles];
const nodeDebugInfos_MdRadioButton0:import10.StaticNodeDebugInfo[] = [
  new import10.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import10.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import10.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import10.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import10.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import10.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import10.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import10.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import10.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import10.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import10.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import10.StaticNodeDebugInfo([
    import18.TemplateRef,
    import19.NgIf
  ]
  ,(null as any),{}),
  new import10.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import10.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import10.StaticNodeDebugInfo(([] as any[]),(null as any),{input: (null as any)}),
  new import10.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import10.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import10.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import10.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import10.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import10.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import10.StaticNodeDebugInfo(([] as any[]),(null as any),{})
]
;
var renderType_MdRadioButton:import11.RenderComponentType = import9.createRenderComponentType('/Users/jessebowden/ichuwt/frontend/node_modules/@angular/material/radio/radio.html',1,import12.ViewEncapsulation.None,styles_MdRadioButton,{});
export class View_MdRadioButton0 extends import8.DebugAppView<import1.MdRadioButton> {
  _text_0:any;
  _text_1:any;
  _el_2:any;
  _text_3:any;
  _text_4:any;
  _el_5:any;
  _text_6:any;
  _el_7:any;
  _text_8:any;
  _el_9:any;
  _text_10:any;
  _anchor_11:any;
  /*private*/ _vc_11:import20.ViewContainer;
  _TemplateRef_11_5:any;
  _NgIf_11_6:import21.Wrapper_NgIf;
  _text_12:any;
  _text_13:any;
  _el_14:any;
  _text_15:any;
  _text_16:any;
  _el_17:any;
  _text_18:any;
  _text_19:any;
  _text_20:any;
  _text_21:any;
  /*private*/ _expr_25:any;
  /*private*/ _expr_26:any;
  /*private*/ _expr_27:any;
  /*private*/ _expr_28:any;
  /*private*/ _expr_29:any;
  /*private*/ _expr_30:any;
  /*private*/ _expr_31:any;
  /*private*/ _expr_32:any;
  constructor(viewUtils:import9.ViewUtils,parentView:import8.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_MdRadioButton0,renderType_MdRadioButton,import13.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways,nodeDebugInfos_MdRadioButton0);
    this._expr_25 = import7.UNINITIALIZED;
    this._expr_26 = import7.UNINITIALIZED;
    this._expr_27 = import7.UNINITIALIZED;
    this._expr_28 = import7.UNINITIALIZED;
    this._expr_29 = import7.UNINITIALIZED;
    this._expr_30 = import7.UNINITIALIZED;
    this._expr_31 = import7.UNINITIALIZED;
    this._expr_32 = import7.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import14.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this._text_0 = this.renderer.createText(parentRenderNode,'\n',this.debug(0,0,71));
    this._text_1 = this.renderer.createText(parentRenderNode,'\n',this.debug(1,1,96));
    this._el_2 = import9.createRenderElement(this.renderer,parentRenderNode,'label',new import9.InlineArray2(2,'class','md-radio-label'),this.debug(2,2,0));
    this._text_3 = this.renderer.createText(this._el_2,'\n  ',this.debug(3,2,51));
    this._text_4 = this.renderer.createText(this._el_2,'\n  ',this.debug(4,3,50));
    this._el_5 = import9.createRenderElement(this.renderer,this._el_2,'div',new import9.InlineArray2(2,'class','md-radio-container'),this.debug(5,4,2));
    this._text_6 = this.renderer.createText(this._el_5,'\n    ',this.debug(6,4,34));
    this._el_7 = import9.createRenderElement(this.renderer,this._el_5,'div',new import9.InlineArray2(2,'class','md-radio-outer-circle'),this.debug(7,5,4));
    this._text_8 = this.renderer.createText(this._el_5,'\n    ',this.debug(8,5,45));
    this._el_9 = import9.createRenderElement(this.renderer,this._el_5,'div',new import9.InlineArray2(2,'class','md-radio-inner-circle'),this.debug(9,6,4));
    this._text_10 = this.renderer.createText(this._el_5,'\n    ',this.debug(10,6,45));
    this._anchor_11 = this.renderer.createTemplateAnchor(this._el_5,this.debug(11,7,4));
    this._vc_11 = new import20.ViewContainer(11,5,this,this._anchor_11);
    this._TemplateRef_11_5 = new import18.TemplateRef_(this,11,this._anchor_11);
    this._NgIf_11_6 = new import21.Wrapper_NgIf(this._vc_11.vcRef,this._TemplateRef_11_5);
    this._text_12 = this.renderer.createText(this._el_5,'\n  ',this.debug(12,11,61));
    this._text_13 = this.renderer.createText(this._el_2,'\n\n  ',this.debug(13,12,8));
    this._el_14 = import9.createRenderElement(this.renderer,this._el_2,'input',new import9.InlineArray4(4,'class','md-radio-input md-visually-hidden','type','radio'),this.debug(14,14,2));
    this._text_15 = this.renderer.createText(this._el_2,'\n\n  ',this.debug(15,24,42));
    this._text_16 = this.renderer.createText(this._el_2,'\n  ',this.debug(16,26,47));
    this._el_17 = import9.createRenderElement(this.renderer,this._el_2,'div',new import9.InlineArray2(2,'class','md-radio-label-content'),this.debug(17,27,2));
    this._text_18 = this.renderer.createText(this._el_17,'\n    ',this.debug(18,27,82));
    this.debug((null as any),28,4);
    this.projectNodes(this._el_17,0);
    this._text_19 = this.renderer.createText(this._el_17,'\n  ',this.debug(19,28,29));
    this._text_20 = this.renderer.createText(this._el_2,'\n',this.debug(20,29,8));
    this._text_21 = this.renderer.createText(parentRenderNode,'\n',this.debug(21,30,8));
    var disposable_0:Function = import9.subscribeToRenderElement(this,this._el_14,new import9.InlineArray8(8,'change',(null as any),'focus',(null as any),'blur',(null as any),'click',(null as any)),this.eventHandler(this.handleEvent_14));
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [
      this._text_0,
      this._text_1,
      this._el_2,
      this._text_3,
      this._text_4,
      this._el_5,
      this._text_6,
      this._el_7,
      this._text_8,
      this._el_9,
      this._text_10,
      this._anchor_11,
      this._text_12,
      this._text_13,
      this._el_14,
      this._text_15,
      this._text_16,
      this._el_17,
      this._text_18,
      this._text_19,
      this._text_20,
      this._text_21
    ]
    ),[disposable_0]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import18.TemplateRef) && (11 === requestNodeIndex))) { return this._TemplateRef_11_5; }
    if (((token === import19.NgIf) && (11 === requestNodeIndex))) { return this._NgIf_11_6.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this.debug(11,7,19);
    const currVal_11_0_0:boolean = !this.context._isRippleDisabled();
    this._NgIf_11_6.check_ngIf(currVal_11_0_0,throwOnChange,false);
    this._NgIf_11_6.ngDoCheck(this,this._anchor_11,throwOnChange);
    this._vc_11.detectChangesInNestedViews(throwOnChange);
    this.debug(2,2,7);
    const currVal_25:any = this.context.inputId;
    if (import9.checkBinding(throwOnChange,this._expr_25,currVal_25)) {
      this.renderer.setElementAttribute(this._el_2,'for',((currVal_25 == null)? (null as any): currVal_25.toString()));
      this._expr_25 = currVal_25;
    }
    this.debug(14,15,10);
    const currVal_26:any = this.context.inputId;
    if (import9.checkBinding(throwOnChange,this._expr_26,currVal_26)) {
      this.renderer.setElementProperty(this._el_14,'id',currVal_26);
      this._expr_26 = currVal_26;
    }
    this.debug(14,16,10);
    const currVal_27:any = this.context.checked;
    if (import9.checkBinding(throwOnChange,this._expr_27,currVal_27)) {
      this.renderer.setElementProperty(this._el_14,'checked',currVal_27);
      this._expr_27 = currVal_27;
    }
    this.debug(14,17,10);
    const currVal_28:any = this.context.disabled;
    if (import9.checkBinding(throwOnChange,this._expr_28,currVal_28)) {
      this.renderer.setElementProperty(this._el_14,'disabled',currVal_28);
      this._expr_28 = currVal_28;
    }
    this.debug(14,18,10);
    const currVal_29:any = this.context.name;
    if (import9.checkBinding(throwOnChange,this._expr_29,currVal_29)) {
      this.renderer.setElementProperty(this._el_14,'name',currVal_29);
      this._expr_29 = currVal_29;
    }
    this.debug(14,19,10);
    const currVal_30:any = this.context.ariaLabel;
    if (import9.checkBinding(throwOnChange,this._expr_30,currVal_30)) {
      this.renderer.setElementAttribute(this._el_14,'aria-label',((currVal_30 == null)? (null as any): currVal_30.toString()));
      this._expr_30 = currVal_30;
    }
    this.debug(14,20,10);
    const currVal_31:any = this.context.ariaLabelledby;
    if (import9.checkBinding(throwOnChange,this._expr_31,currVal_31)) {
      this.renderer.setElementAttribute(this._el_14,'aria-labelledby',((currVal_31 == null)? (null as any): currVal_31.toString()));
      this._expr_31 = currVal_31;
    }
    this.debug(17,27,38);
    const currVal_32:any = (this.context.align == 'end');
    if (import9.checkBinding(throwOnChange,this._expr_32,currVal_32)) {
      this.renderer.setElementClass(this._el_17,'md-radio-align-end',currVal_32);
      this._expr_32 = currVal_32;
    }
  }
  destroyInternal():void {
    this._vc_11.destroyNestedViews();
  }
  createEmbeddedViewInternal(nodeIndex:number):import8.AppView<any> {
    if ((nodeIndex == 11)) { return new View_MdRadioButton1(this.viewUtils,this,11,this._anchor_11,this._vc_11); }
    return (null as any);
  }
  handleEvent_14(eventName:string,$event:any):boolean {
    this.debug(14,14,2);
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'change')) {
      const pd_sub_0:any = ((<any>this.context._onInputChange($event)) !== false);
      result = (pd_sub_0 && result);
    }
    if ((eventName == 'focus')) {
      const pd_sub_1:any = ((<any>this.context._onInputFocus()) !== false);
      result = (pd_sub_1 && result);
    }
    if ((eventName == 'blur')) {
      const pd_sub_2:any = ((<any>this.context._onInputBlur()) !== false);
      result = (pd_sub_2 && result);
    }
    if ((eventName == 'click')) {
      const pd_sub_3:any = ((<any>this.context._onInputClick($event)) !== false);
      result = (pd_sub_3 && result);
    }
    return result;
  }
}
const nodeDebugInfos_MdRadioButton1:import10.StaticNodeDebugInfo[] = [new import10.StaticNodeDebugInfo([import3.MdRipple],(null as any),{})];
class View_MdRadioButton1 extends import8.DebugAppView<any> {
  _el_0:any;
  _MdRipple_0_3:import22.Wrapper_MdRipple;
  constructor(viewUtils:import9.ViewUtils,parentView:import8.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import20.ViewContainer) {
    super(View_MdRadioButton1,renderType_MdRadioButton,import13.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways,nodeDebugInfos_MdRadioButton1,declaredViewContainer);
  }
  createInternal(rootSelector:string):import14.ComponentRef<any> {
    this._el_0 = import9.createRenderElement(this.renderer,(null as any),'div',new import9.InlineArray8(6,'class','md-radio-ripple','md-ripple','','md-ripple-background-color','rgba(0, 0, 0, 0)'),this.debug(0,7,4));
    this._MdRipple_0_3 = new import22.Wrapper_MdRipple(new import15.ElementRef(this._el_0));
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import3.MdRipple) && (0 === requestNodeIndex))) { return this._MdRipple_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this.debug(0,8,9);
    const currVal_0_0_0:any = this.parentView.context.getHostElement();
    this._MdRipple_0_3.check_trigger(currVal_0_0_0,throwOnChange,false);
    this.debug(0,9,9);
    const currVal_0_0_1:any = true;
    this._MdRipple_0_3.check_centered(currVal_0_0_1,throwOnChange,false);
    this.debug(0,10,9);
    const currVal_0_0_2:any = 0.3;
    this._MdRipple_0_3.check_speedFactor(currVal_0_0_2,throwOnChange,false);
    this.debug(0,11,9);
    const currVal_0_0_3:any = 'rgba(0, 0, 0, 0)';
    this._MdRipple_0_3.check_backgroundColor(currVal_0_0_3,throwOnChange,false);
    this._MdRipple_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    this._MdRipple_0_3.checkHost(this,this,this._el_0,throwOnChange);
  }
  destroyInternal():void {
    this._MdRipple_0_3.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}