/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from '@angular/material/snack-bar/snack-bar-container';
import * as import1 from '@angular/core/src/change_detection/change_detection';
import * as import2 from '@angular/core/src/linker/view';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import4 from '@angular/core/src/linker/debug_context';
import * as import5 from '@angular/core/src/render/api';
import * as import6 from '@angular/core/src/metadata/view';
import * as import7 from '@angular/core/src/linker/view_type';
import * as import8 from '@angular/core/src/linker/component_factory';
import * as import9 from '@angular/core/src/zone/ng_zone';
import * as import10 from './snack-bar-container.css.shim';
import * as import11 from '@angular/core/src/animation/animation_transition';
import * as import12 from '@angular/core/src/animation/animation_sequence_player';
import * as import13 from '@angular/core/src/animation/animation_styles';
import * as import14 from '@angular/core/src/animation/animation_style_util';
import * as import15 from '@angular/core/src/animation/animation_keyframe';
import * as import16 from '@angular/core/src/animation/animation_player';
import * as import17 from '@angular/core/src/linker/template_ref';
import * as import18 from '@angular/material/core/portal/portal-directives';
import * as import19 from '@angular/core/src/linker/query_list';
import * as import20 from '@angular/core/src/linker/view_container';
import * as import21 from '../core/portal/portal-directives.ngfactory';
import * as import22 from '@angular/core/src/linker/component_factory_resolver';
export class Wrapper_MdSnackBarContainer {
  /*private*/ _eventHandler:Function;
  context:import0.MdSnackBarContainer;
  /*private*/ _changed:boolean;
  /*private*/ _expr_0:any;
  constructor(p0:any) {
    this._changed = false;
    this.context = new import0.MdSnackBarContainer(p0);
    this._expr_0 = import1.UNINITIALIZED;
  }
  ngOnDetach(view:import2.AppView<any>,componentView:import2.AppView<any>,el:any):void {
    var animationTransition_state:any = componentView.componentType.animations['state'](view,el,this._expr_0,'void');
    animationTransition_state.onStart((this._eventHandler || import3.noop).bind(view,'@state.start'));
    animationTransition_state.onDone((this._eventHandler || import3.noop).bind(view,'@state.done'));
  }
  ngOnDestroy():void {
  }
  ngDoCheck(view:import2.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    return changed;
  }
  checkHost(view:import2.AppView<any>,componentView:import2.AppView<any>,el:any,throwOnChange:boolean):void {
    const currVal_0:any = this.context.animationState;
    if (import3.checkBinding(throwOnChange,this._expr_0,currVal_0)) {
      var animationTransition_state:any = componentView.componentType.animations['state'](view,el,((this._expr_0 == import1.UNINITIALIZED)? 'void': this._expr_0),((currVal_0 == import1.UNINITIALIZED)? 'void': currVal_0));
      animationTransition_state.onStart((this._eventHandler || import3.noop).bind(view,'@state.start'));
      animationTransition_state.onDone((this._eventHandler || import3.noop).bind(view,'@state.done'));
      this._expr_0 = currVal_0;
    }
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    if ((eventName == '@state.done')) {
      const pd_sub_0:any = ((<any>this.context.markAsExited($event)) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
  subscribe(view:import2.AppView<any>,_eventHandler:any):void {
    this._eventHandler = _eventHandler;
  }
}
const nodeDebugInfos_MdSnackBarContainer_Host0:import4.StaticNodeDebugInfo[] = [new import4.StaticNodeDebugInfo([import0.MdSnackBarContainer],import0.MdSnackBarContainer,{})];
var renderType_MdSnackBarContainer_Host:import5.RenderComponentType = import3.createRenderComponentType('',0,import6.ViewEncapsulation.None,([] as any[]),{});
class View_MdSnackBarContainer_Host0 extends import2.DebugAppView<any> {
  _el_0:any;
  compView_0:import2.AppView<import0.MdSnackBarContainer>;
  _MdSnackBarContainer_0_3:Wrapper_MdSnackBarContainer;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_MdSnackBarContainer_Host0,renderType_MdSnackBarContainer_Host,import7.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import1.ChangeDetectorStatus.CheckAlways,nodeDebugInfos_MdSnackBarContainer_Host0);
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer,'snack-bar-container',new import3.InlineArray2(2,'role','alert'),rootSelector,this.debug(0,0,0));
    this.compView_0 = new View_MdSnackBarContainer0(this.viewUtils,this,0,this._el_0);
    this._MdSnackBarContainer_0_3 = new Wrapper_MdSnackBarContainer(this.injectorGet(import9.NgZone,this.parentIndex));
    this.compView_0.create(this._MdSnackBarContainer_0_3.context);
    this._MdSnackBarContainer_0_3.subscribe(this,this.eventHandler(this.handleEvent_0));
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return new import8.ComponentRef_<any>(0,this,this._el_0,this._MdSnackBarContainer_0_3.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import0.MdSnackBarContainer) && (0 === requestNodeIndex))) { return this._MdSnackBarContainer_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this.debug(0,0,0);
    this._MdSnackBarContainer_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    this._MdSnackBarContainer_0_3.checkHost(this,this.compView_0,this._el_0,throwOnChange);
    this.compView_0.detectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
  }
  detachInternal():void {
    this._MdSnackBarContainer_0_3.ngOnDetach(this,this.compView_0,this._el_0);
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  handleEvent_0(eventName:string,$event:any):boolean {
    this.debug(0,0,0);
    this.compView_0.markPathToRootAsCheckOnce();
    var result:boolean = true;
    result = (this._MdSnackBarContainer_0_3.handleEvent(eventName,$event) && result);
    return result;
  }
}
export const MdSnackBarContainerNgFactory:import8.ComponentFactory<import0.MdSnackBarContainer> = new import8.ComponentFactory<import0.MdSnackBarContainer>('snack-bar-container',View_MdSnackBarContainer_Host0,import0.MdSnackBarContainer);
const styles_MdSnackBarContainer:any[] = [import10.styles];
var MdSnackBarContainer_state_states:any = {
  initial: {transform: 'translateY(100%)'},
  visible: {transform: 'translateY(0%)'},
  complete: {transform: 'translateY(100%)'},
  '*': {},
  void: {}
}
;
function MdSnackBarContainer_state_factory(view:import2.AppView<any>,element:any,currentState:any,nextState:any):import11.AnimationTransition {
  var previousPlayers:any = view.animationContext.getAnimationPlayers(element,'state',(nextState == 'void'));
  var collectedStyles:any = {};
  var player:any = (null as any);
  var totalTime:any = 0;
  var defaultStateStyles:any = MdSnackBarContainer_state_states['*'];
  var startStateStyles:any = MdSnackBarContainer_state_states[currentState];
  if ((startStateStyles == (null as any))) { (startStateStyles = defaultStateStyles); }
  var endStateStyles:any = MdSnackBarContainer_state_states[nextState];
  if ((endStateStyles == (null as any))) { (endStateStyles = defaultStateStyles); }
  if (((player == (null as any)) && ((currentState == 'visible') && (nextState == 'complete')))) {
      player = new import12.AnimationSequencePlayer([view.renderer.animate(element,new import13.AnimationStyles(import14.collectAndResolveStyles(collectedStyles,[startStateStyles])),import14.balanceAnimationKeyframes(collectedStyles,endStateStyles,[
        new import15.AnimationKeyframe(0,new import13.AnimationStyles(import14.collectAndResolveStyles(collectedStyles,[{}]))),
        new import15.AnimationKeyframe(1,new import13.AnimationStyles(import14.collectAndResolveStyles(collectedStyles,[{}])))
      ]
    ),195,0,'cubic-bezier(0.0,0.0,0.2,1)',previousPlayers)]);
    totalTime = 195;
  }
  if (((player == (null as any)) && (((currentState == 'initial') && (nextState == 'visible')) || ((currentState == 'void') && (nextState == 'visible'))))) {
      player = new import12.AnimationSequencePlayer([view.renderer.animate(element,new import13.AnimationStyles(import14.collectAndResolveStyles(collectedStyles,[startStateStyles])),import14.balanceAnimationKeyframes(collectedStyles,endStateStyles,[
        new import15.AnimationKeyframe(0,new import13.AnimationStyles(import14.collectAndResolveStyles(collectedStyles,[{}]))),
        new import15.AnimationKeyframe(1,new import13.AnimationStyles(import14.collectAndResolveStyles(collectedStyles,[{}])))
      ]
    ),225,0,'cubic-bezier(0.4,0.0,1,1)',previousPlayers)]);
    totalTime = 225;
  }
  if ((player == (null as any))) { (player = new import16.NoOpAnimationPlayer()); }
  player.onDone(():void => {
    player.destroy();
    import14.renderStyles(element,view.renderer,import14.prepareFinalAnimationStyles(startStateStyles,endStateStyles));
  });
  new import12.AnimationSequencePlayer(previousPlayers).destroy();
  import14.renderStyles(element,view.renderer,import14.clearStyles(startStateStyles));
  view.animationContext.queueAnimation(element,'state',player);
  return new import11.AnimationTransition(player,currentState,nextState,totalTime);
}
  const nodeDebugInfos_MdSnackBarContainer0:import4.StaticNodeDebugInfo[] = [new import4.StaticNodeDebugInfo([
    import17.TemplateRef,
    import18.PortalHostDirective
  ]
,(null as any),{})];
var renderType_MdSnackBarContainer:import5.RenderComponentType = import3.createRenderComponentType('/Users/jessebowden/ichuwt/frontend/node_modules/@angular/material/snack-bar/snack-bar-container.html',0,import6.ViewEncapsulation.Emulated,styles_MdSnackBarContainer,{state: MdSnackBarContainer_state_factory});
export class View_MdSnackBarContainer0 extends import2.DebugAppView<import0.MdSnackBarContainer> {
  _viewQuery_PortalHostDirective_0:import19.QueryList<any>;
  _anchor_0:any;
  /*private*/ _vc_0:import20.ViewContainer;
  _TemplateRef_0_5:any;
  _PortalHostDirective_0_6:import21.Wrapper_PortalHostDirective;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_MdSnackBarContainer0,renderType_MdSnackBarContainer,import7.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import1.ChangeDetectorStatus.CheckAlways,nodeDebugInfos_MdSnackBarContainer0);
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this._viewQuery_PortalHostDirective_0 = new import19.QueryList<any>();
    this._anchor_0 = this.renderer.createTemplateAnchor(parentRenderNode,this.debug(0,0,0));
    this._vc_0 = new import20.ViewContainer(0,(null as any),this,this._anchor_0);
    this._TemplateRef_0_5 = new import17.TemplateRef_(this,0,this._anchor_0);
    this._PortalHostDirective_0_6 = new import21.Wrapper_PortalHostDirective(this.parentView.injectorGet(import22.ComponentFactoryResolver,this.parentIndex),this._vc_0.vcRef);
    this._viewQuery_PortalHostDirective_0.reset([this._PortalHostDirective_0_6.context]);
    this.context._portalHost = this._viewQuery_PortalHostDirective_0.first;
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [this._anchor_0]),(null as any));
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import17.TemplateRef) && (0 === requestNodeIndex))) { return this._TemplateRef_0_5; }
    if (((token === import18.PortalHostDirective) && (0 === requestNodeIndex))) { return this._PortalHostDirective_0_6.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this.debug(0,0,10);
    const currVal_0_0_0:any = '';
    this._PortalHostDirective_0_6.check_portal(currVal_0_0_0,throwOnChange,false);
    this._PortalHostDirective_0_6.ngDoCheck(this,this._anchor_0,throwOnChange);
    this._vc_0.detectChangesInNestedViews(throwOnChange);
  }
  destroyInternal():void {
    this._vc_0.destroyNestedViews();
    this._PortalHostDirective_0_6.ngOnDestroy();
  }
  createEmbeddedViewInternal(nodeIndex:number):import2.AppView<any> {
    if ((nodeIndex == 0)) { return new View_MdSnackBarContainer1(this.viewUtils,this,0,this._anchor_0,this._vc_0); }
    return (null as any);
  }
}
const nodeDebugInfos_MdSnackBarContainer1:import4.StaticNodeDebugInfo[] = ([] as any[]);
class View_MdSnackBarContainer1 extends import2.DebugAppView<any> {
  _el_0:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import20.ViewContainer) {
    super(View_MdSnackBarContainer1,renderType_MdSnackBarContainer,import7.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import1.ChangeDetectorStatus.CheckAlways,nodeDebugInfos_MdSnackBarContainer1,declaredViewContainer);
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    this._el_0 = this.renderer.createTemplateAnchor((null as any),(null as any));
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): ([] as any[])),(null as any));
    return (null as any);
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}