/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from '@angular/core/src/linker/ng_module_factory';
import * as import1 from '@angular/material/card/card';
import * as import2 from '@angular/core/src/di/injector';
import * as import3 from '@angular/core/src/linker/view';
import * as import4 from '@angular/core/src/linker/debug_context';
import * as import5 from '@angular/core/src/render/api';
import * as import6 from '@angular/core/src/linker/view_utils';
import * as import7 from '@angular/core/src/metadata/view';
import * as import8 from '@angular/core/src/linker/view_type';
import * as import9 from '@angular/core/src/change_detection/change_detection';
import * as import10 from '@angular/core/src/linker/component_factory';
import * as import11 from './card.css';
class MdCardModuleInjector extends import0.NgModuleInjector<import1.MdCardModule> {
  _MdCardModule_0:import1.MdCardModule;
  constructor(parent:import2.Injector) {
    super(parent,([] as any[]),([] as any[]));
  }
  createInternal():import1.MdCardModule {
    this._MdCardModule_0 = new import1.MdCardModule();
    return this._MdCardModule_0;
  }
  getInternal(token:any,notFoundResult:any):any {
    if ((token === import1.MdCardModule)) { return this._MdCardModule_0; }
    return notFoundResult;
  }
  destroyInternal():void {
  }
}
export const MdCardModuleNgFactory:import0.NgModuleFactory<import1.MdCardModule> = new import0.NgModuleFactory(MdCardModuleInjector,import1.MdCardModule);
export class Wrapper_MdCard {
  /*private*/ _eventHandler:Function;
  context:import1.MdCard;
  /*private*/ _changed:boolean;
  constructor() {
    this._changed = false;
    this.context = new import1.MdCard();
  }
  ngOnDetach(view:import3.AppView<any>,componentView:import3.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
  }
  ngDoCheck(view:import3.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    return changed;
  }
  checkHost(view:import3.AppView<any>,componentView:import3.AppView<any>,el:any,throwOnChange:boolean):void {
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import3.AppView<any>,_eventHandler:any):void {
    this._eventHandler = _eventHandler;
  }
}
export class Wrapper_MdCardHeader {
  /*private*/ _eventHandler:Function;
  context:import1.MdCardHeader;
  /*private*/ _changed:boolean;
  constructor() {
    this._changed = false;
    this.context = new import1.MdCardHeader();
  }
  ngOnDetach(view:import3.AppView<any>,componentView:import3.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
  }
  ngDoCheck(view:import3.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    return changed;
  }
  checkHost(view:import3.AppView<any>,componentView:import3.AppView<any>,el:any,throwOnChange:boolean):void {
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import3.AppView<any>,_eventHandler:any):void {
    this._eventHandler = _eventHandler;
  }
}
export class Wrapper_MdCardTitleGroup {
  /*private*/ _eventHandler:Function;
  context:import1.MdCardTitleGroup;
  /*private*/ _changed:boolean;
  constructor() {
    this._changed = false;
    this.context = new import1.MdCardTitleGroup();
  }
  ngOnDetach(view:import3.AppView<any>,componentView:import3.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
  }
  ngDoCheck(view:import3.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    return changed;
  }
  checkHost(view:import3.AppView<any>,componentView:import3.AppView<any>,el:any,throwOnChange:boolean):void {
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import3.AppView<any>,_eventHandler:any):void {
    this._eventHandler = _eventHandler;
  }
}
export class Wrapper_MdCardContent {
  /*private*/ _eventHandler:Function;
  context:import1.MdCardContent;
  /*private*/ _changed:boolean;
  constructor() {
    this._changed = false;
    this.context = new import1.MdCardContent();
  }
  ngOnDetach(view:import3.AppView<any>,componentView:import3.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
  }
  ngDoCheck(view:import3.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    return changed;
  }
  checkHost(view:import3.AppView<any>,componentView:import3.AppView<any>,el:any,throwOnChange:boolean):void {
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import3.AppView<any>,_eventHandler:any):void {
    this._eventHandler = _eventHandler;
  }
}
export class Wrapper_MdCardTitle {
  /*private*/ _eventHandler:Function;
  context:import1.MdCardTitle;
  /*private*/ _changed:boolean;
  constructor() {
    this._changed = false;
    this.context = new import1.MdCardTitle();
  }
  ngOnDetach(view:import3.AppView<any>,componentView:import3.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
  }
  ngDoCheck(view:import3.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    return changed;
  }
  checkHost(view:import3.AppView<any>,componentView:import3.AppView<any>,el:any,throwOnChange:boolean):void {
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import3.AppView<any>,_eventHandler:any):void {
    this._eventHandler = _eventHandler;
  }
}
export class Wrapper_MdCardSubtitle {
  /*private*/ _eventHandler:Function;
  context:import1.MdCardSubtitle;
  /*private*/ _changed:boolean;
  constructor() {
    this._changed = false;
    this.context = new import1.MdCardSubtitle();
  }
  ngOnDetach(view:import3.AppView<any>,componentView:import3.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
  }
  ngDoCheck(view:import3.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    return changed;
  }
  checkHost(view:import3.AppView<any>,componentView:import3.AppView<any>,el:any,throwOnChange:boolean):void {
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import3.AppView<any>,_eventHandler:any):void {
    this._eventHandler = _eventHandler;
  }
}
export class Wrapper_MdCardActions {
  /*private*/ _eventHandler:Function;
  context:import1.MdCardActions;
  /*private*/ _changed:boolean;
  constructor() {
    this._changed = false;
    this.context = new import1.MdCardActions();
  }
  ngOnDetach(view:import3.AppView<any>,componentView:import3.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
  }
  ngDoCheck(view:import3.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    return changed;
  }
  checkHost(view:import3.AppView<any>,componentView:import3.AppView<any>,el:any,throwOnChange:boolean):void {
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import3.AppView<any>,_eventHandler:any):void {
    this._eventHandler = _eventHandler;
  }
}
export class Wrapper_MdCardFooter {
  /*private*/ _eventHandler:Function;
  context:import1.MdCardFooter;
  /*private*/ _changed:boolean;
  constructor() {
    this._changed = false;
    this.context = new import1.MdCardFooter();
  }
  ngOnDetach(view:import3.AppView<any>,componentView:import3.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
  }
  ngDoCheck(view:import3.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    return changed;
  }
  checkHost(view:import3.AppView<any>,componentView:import3.AppView<any>,el:any,throwOnChange:boolean):void {
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import3.AppView<any>,_eventHandler:any):void {
    this._eventHandler = _eventHandler;
  }
}
const nodeDebugInfos_MdCard_Host0:import4.StaticNodeDebugInfo[] = [new import4.StaticNodeDebugInfo([import1.MdCard],import1.MdCard,{})];
var renderType_MdCard_Host:import5.RenderComponentType = import6.createRenderComponentType('',0,import7.ViewEncapsulation.None,([] as any[]),{});
class View_MdCard_Host0 extends import3.DebugAppView<any> {
  _el_0:any;
  compView_0:import3.AppView<import1.MdCard>;
  _MdCard_0_3:Wrapper_MdCard;
  constructor(viewUtils:import6.ViewUtils,parentView:import3.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_MdCard_Host0,renderType_MdCard_Host,import8.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import9.ChangeDetectorStatus.CheckAlways,nodeDebugInfos_MdCard_Host0);
  }
  createInternal(rootSelector:string):import10.ComponentRef<any> {
    this._el_0 = import6.selectOrCreateRenderHostElement(this.renderer,'md-card',import6.EMPTY_INLINE_ARRAY,rootSelector,this.debug(0,0,0));
    this.compView_0 = new View_MdCard0(this.viewUtils,this,0,this._el_0);
    this._MdCard_0_3 = new Wrapper_MdCard();
    this.compView_0.create(this._MdCard_0_3.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return new import10.ComponentRef_<any>(0,this,this._el_0,this._MdCard_0_3.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import1.MdCard) && (0 === requestNodeIndex))) { return this._MdCard_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this.debug(0,0,0);
    if (this._MdCard_0_3.ngDoCheck(this,this._el_0,throwOnChange)) { this.compView_0.markAsCheckOnce(); }
    this.compView_0.detectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  visitProjectableNodesInternal(nodeIndex:number,ngContentIndex:number,cb:any,ctx:any):void {
    if (((nodeIndex == 0) && (ngContentIndex == 0))) {  }
  }
}
export const MdCardNgFactory:import10.ComponentFactory<import1.MdCard> = new import10.ComponentFactory<import1.MdCard>('md-card',View_MdCard_Host0,import1.MdCard);
const styles_MdCard:any[] = [import11.styles];
const nodeDebugInfos_MdCard0:import4.StaticNodeDebugInfo[] = [new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{})];
var renderType_MdCard:import5.RenderComponentType = import6.createRenderComponentType('/Users/jessebowden/ichuwt/frontend/node_modules/@angular/material/card/card.html',1,import7.ViewEncapsulation.None,styles_MdCard,{});
export class View_MdCard0 extends import3.DebugAppView<import1.MdCard> {
  _text_0:any;
  constructor(viewUtils:import6.ViewUtils,parentView:import3.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_MdCard0,renderType_MdCard,import8.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import9.ChangeDetectorStatus.CheckOnce,nodeDebugInfos_MdCard0);
  }
  createInternal(rootSelector:string):import10.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this.debug((null as any),0,0);
    this.projectNodes(parentRenderNode,0);
    this._text_0 = this.renderer.createText(parentRenderNode,'\n',this.debug(0,0,25));
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [this._text_0]),(null as any));
    return (null as any);
  }
}
const nodeDebugInfos_MdCardHeader_Host0:import4.StaticNodeDebugInfo[] = [new import4.StaticNodeDebugInfo([import1.MdCardHeader],import1.MdCardHeader,{})];
var renderType_MdCardHeader_Host:import5.RenderComponentType = import6.createRenderComponentType('',0,import7.ViewEncapsulation.None,([] as any[]),{});
class View_MdCardHeader_Host0 extends import3.DebugAppView<any> {
  _el_0:any;
  compView_0:import3.AppView<import1.MdCardHeader>;
  _MdCardHeader_0_3:Wrapper_MdCardHeader;
  constructor(viewUtils:import6.ViewUtils,parentView:import3.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_MdCardHeader_Host0,renderType_MdCardHeader_Host,import8.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import9.ChangeDetectorStatus.CheckAlways,nodeDebugInfos_MdCardHeader_Host0);
  }
  createInternal(rootSelector:string):import10.ComponentRef<any> {
    this._el_0 = import6.selectOrCreateRenderHostElement(this.renderer,'md-card-header',import6.EMPTY_INLINE_ARRAY,rootSelector,this.debug(0,0,0));
    this.compView_0 = new View_MdCardHeader0(this.viewUtils,this,0,this._el_0);
    this._MdCardHeader_0_3 = new Wrapper_MdCardHeader();
    this.compView_0.create(this._MdCardHeader_0_3.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return new import10.ComponentRef_<any>(0,this,this._el_0,this._MdCardHeader_0_3.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import1.MdCardHeader) && (0 === requestNodeIndex))) { return this._MdCardHeader_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this.debug(0,0,0);
    if (this._MdCardHeader_0_3.ngDoCheck(this,this._el_0,throwOnChange)) { this.compView_0.markAsCheckOnce(); }
    this.compView_0.detectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  visitProjectableNodesInternal(nodeIndex:number,ngContentIndex:number,cb:any,ctx:any):void {
    if (((nodeIndex == 0) && (ngContentIndex == 0))) {  }
    if (((nodeIndex == 0) && (ngContentIndex == 1))) {  }
    if (((nodeIndex == 0) && (ngContentIndex == 2))) {  }
  }
}
export const MdCardHeaderNgFactory:import10.ComponentFactory<import1.MdCardHeader> = new import10.ComponentFactory<import1.MdCardHeader>('md-card-header',View_MdCardHeader_Host0,import1.MdCardHeader);
const styles_MdCardHeader:any[] = ([] as any[]);
const nodeDebugInfos_MdCardHeader0:import4.StaticNodeDebugInfo[] = [
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{})
]
;
var renderType_MdCardHeader:import5.RenderComponentType = import6.createRenderComponentType('/Users/jessebowden/ichuwt/frontend/node_modules/@angular/material/card/card-header.html',3,import7.ViewEncapsulation.None,styles_MdCardHeader,{});
export class View_MdCardHeader0 extends import3.DebugAppView<import1.MdCardHeader> {
  _text_0:any;
  _el_1:any;
  _text_2:any;
  _text_3:any;
  _text_4:any;
  _text_5:any;
  constructor(viewUtils:import6.ViewUtils,parentView:import3.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_MdCardHeader0,renderType_MdCardHeader,import8.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import9.ChangeDetectorStatus.CheckOnce,nodeDebugInfos_MdCardHeader0);
  }
  createInternal(rootSelector:string):import10.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this.debug((null as any),0,0);
    this.projectNodes(parentRenderNode,0);
    this._text_0 = this.renderer.createText(parentRenderNode,'\n',this.debug(0,0,51));
    this._el_1 = import6.createRenderElement(this.renderer,parentRenderNode,'div',new import6.InlineArray2(2,'class','md-card-header-text'),this.debug(1,1,0));
    this._text_2 = this.renderer.createText(this._el_1,'\n  ',this.debug(2,1,33));
    this.debug((null as any),2,2);
    this.projectNodes(this._el_1,1);
    this._text_3 = this.renderer.createText(this._el_1,'\n',this.debug(3,2,68));
    this._text_4 = this.renderer.createText(parentRenderNode,'\n',this.debug(4,3,6));
    this.debug((null as any),4,0);
    this.projectNodes(parentRenderNode,2);
    this._text_5 = this.renderer.createText(parentRenderNode,'\n',this.debug(5,4,25));
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [
      this._text_0,
      this._el_1,
      this._text_2,
      this._text_3,
      this._text_4,
      this._text_5
    ]
    ),(null as any));
    return (null as any);
  }
}
const nodeDebugInfos_MdCardTitleGroup_Host0:import4.StaticNodeDebugInfo[] = [new import4.StaticNodeDebugInfo([import1.MdCardTitleGroup],import1.MdCardTitleGroup,{})];
var renderType_MdCardTitleGroup_Host:import5.RenderComponentType = import6.createRenderComponentType('',0,import7.ViewEncapsulation.None,([] as any[]),{});
class View_MdCardTitleGroup_Host0 extends import3.DebugAppView<any> {
  _el_0:any;
  compView_0:import3.AppView<import1.MdCardTitleGroup>;
  _MdCardTitleGroup_0_3:Wrapper_MdCardTitleGroup;
  constructor(viewUtils:import6.ViewUtils,parentView:import3.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_MdCardTitleGroup_Host0,renderType_MdCardTitleGroup_Host,import8.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import9.ChangeDetectorStatus.CheckAlways,nodeDebugInfos_MdCardTitleGroup_Host0);
  }
  createInternal(rootSelector:string):import10.ComponentRef<any> {
    this._el_0 = import6.selectOrCreateRenderHostElement(this.renderer,'md-card-title-group',import6.EMPTY_INLINE_ARRAY,rootSelector,this.debug(0,0,0));
    this.compView_0 = new View_MdCardTitleGroup0(this.viewUtils,this,0,this._el_0);
    this._MdCardTitleGroup_0_3 = new Wrapper_MdCardTitleGroup();
    this.compView_0.create(this._MdCardTitleGroup_0_3.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return new import10.ComponentRef_<any>(0,this,this._el_0,this._MdCardTitleGroup_0_3.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import1.MdCardTitleGroup) && (0 === requestNodeIndex))) { return this._MdCardTitleGroup_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this.debug(0,0,0);
    if (this._MdCardTitleGroup_0_3.ngDoCheck(this,this._el_0,throwOnChange)) { this.compView_0.markAsCheckOnce(); }
    this.compView_0.detectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  visitProjectableNodesInternal(nodeIndex:number,ngContentIndex:number,cb:any,ctx:any):void {
    if (((nodeIndex == 0) && (ngContentIndex == 0))) {  }
    if (((nodeIndex == 0) && (ngContentIndex == 1))) {  }
    if (((nodeIndex == 0) && (ngContentIndex == 2))) {  }
  }
}
export const MdCardTitleGroupNgFactory:import10.ComponentFactory<import1.MdCardTitleGroup> = new import10.ComponentFactory<import1.MdCardTitleGroup>('md-card-title-group',View_MdCardTitleGroup_Host0,import1.MdCardTitleGroup);
const styles_MdCardTitleGroup:any[] = ([] as any[]);
const nodeDebugInfos_MdCardTitleGroup0:import4.StaticNodeDebugInfo[] = [
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import4.StaticNodeDebugInfo(([] as any[]),(null as any),{})
]
;
var renderType_MdCardTitleGroup:import5.RenderComponentType = import6.createRenderComponentType('/Users/jessebowden/ichuwt/frontend/node_modules/@angular/material/card/card-title-group.html',3,import7.ViewEncapsulation.None,styles_MdCardTitleGroup,{});
export class View_MdCardTitleGroup0 extends import3.DebugAppView<import1.MdCardTitleGroup> {
  _el_0:any;
  _text_1:any;
  _text_2:any;
  _text_3:any;
  _text_4:any;
  _text_5:any;
  constructor(viewUtils:import6.ViewUtils,parentView:import3.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_MdCardTitleGroup0,renderType_MdCardTitleGroup,import8.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import9.ChangeDetectorStatus.CheckOnce,nodeDebugInfos_MdCardTitleGroup0);
  }
  createInternal(rootSelector:string):import10.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this._el_0 = import6.createRenderElement(this.renderer,parentRenderNode,'div',import6.EMPTY_INLINE_ARRAY,this.debug(0,0,0));
    this._text_1 = this.renderer.createText(this._el_0,'\n  ',this.debug(1,0,5));
    this.debug((null as any),1,2);
    this.projectNodes(this._el_0,0);
    this._text_2 = this.renderer.createText(this._el_0,'\n',this.debug(2,1,68));
    this._text_3 = this.renderer.createText(parentRenderNode,'\n',this.debug(3,2,6));
    this.debug((null as any),3,0);
    this.projectNodes(parentRenderNode,1);
    this._text_4 = this.renderer.createText(parentRenderNode,'\n',this.debug(4,3,38));
    this.debug((null as any),4,0);
    this.projectNodes(parentRenderNode,2);
    this._text_5 = this.renderer.createText(parentRenderNode,'\n',this.debug(5,4,25));
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1,
      this._text_2,
      this._text_3,
      this._text_4,
      this._text_5
    ]
    ),(null as any));
    return (null as any);
  }
}