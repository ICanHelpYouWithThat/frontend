/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from '@angular/core/src/linker/ng_module_factory';
import * as import1 from '@angular/material/slider/slider';
import * as import2 from '@angular/forms/src/directives';
import * as import3 from '@angular/forms/src/form_providers';
import * as import4 from '@angular/forms/src/directives/radio_control_value_accessor';
import * as import5 from '@angular/material/core/gestures/MdGestureConfig';
import * as import6 from '@angular/core/src/di/injector';
import * as import7 from '@angular/platform-browser/src/dom/events/hammer_gestures';
import * as import8 from '@angular/core/src/change_detection/change_detection';
import * as import9 from '@angular/core/src/linker/view';
import * as import10 from '@angular/core/src/linker/view_utils';
import * as import11 from '@angular/core/src/linker/debug_context';
import * as import12 from '@angular/forms/src/directives/control_value_accessor';
import * as import13 from '@angular/core/src/render/api';
import * as import14 from '@angular/core/src/metadata/view';
import * as import15 from '@angular/core/src/linker/view_type';
import * as import16 from '@angular/core/src/linker/component_factory';
import * as import17 from '@angular/core/src/linker/element_ref';
import * as import18 from './slider.css';
import * as import19 from '@angular/core/src/security';
class MdSliderModuleInjector extends import0.NgModuleInjector<import1.MdSliderModule> {
  _InternalFormsSharedModule_0:import2.InternalFormsSharedModule;
  _FormsModule_1:import3.FormsModule;
  _MdSliderModule_2:import1.MdSliderModule;
  __RadioControlRegistry_3:import4.RadioControlRegistry;
  __HAMMER_GESTURE_CONFIG_4:import5.MdGestureConfig;
  constructor(parent:import6.Injector) {
    super(parent,([] as any[]),([] as any[]));
  }
  get _RadioControlRegistry_3():import4.RadioControlRegistry {
    if ((this.__RadioControlRegistry_3 == null)) { (this.__RadioControlRegistry_3 = new import4.RadioControlRegistry()); }
    return this.__RadioControlRegistry_3;
  }
  get _HAMMER_GESTURE_CONFIG_4():import5.MdGestureConfig {
    if ((this.__HAMMER_GESTURE_CONFIG_4 == null)) { (this.__HAMMER_GESTURE_CONFIG_4 = new import5.MdGestureConfig()); }
    return this.__HAMMER_GESTURE_CONFIG_4;
  }
  createInternal():import1.MdSliderModule {
    this._InternalFormsSharedModule_0 = new import2.InternalFormsSharedModule();
    this._FormsModule_1 = new import3.FormsModule();
    this._MdSliderModule_2 = new import1.MdSliderModule();
    return this._MdSliderModule_2;
  }
  getInternal(token:any,notFoundResult:any):any {
    if ((token === import2.InternalFormsSharedModule)) { return this._InternalFormsSharedModule_0; }
    if ((token === import3.FormsModule)) { return this._FormsModule_1; }
    if ((token === import1.MdSliderModule)) { return this._MdSliderModule_2; }
    if ((token === import4.RadioControlRegistry)) { return this._RadioControlRegistry_3; }
    if ((token === import7.HAMMER_GESTURE_CONFIG)) { return this._HAMMER_GESTURE_CONFIG_4; }
    return notFoundResult;
  }
  destroyInternal():void {
  }
}
export const MdSliderModuleNgFactory:import0.NgModuleFactory<import1.MdSliderModule> = new import0.NgModuleFactory(MdSliderModuleInjector,import1.MdSliderModule);
export class Wrapper_MdSlider {
  /*private*/ _eventHandler:Function;
  context:import1.MdSlider;
  /*private*/ _changed:boolean;
  /*private*/ _expr_0:any;
  /*private*/ _expr_1:any;
  /*private*/ _expr_2:any;
  /*private*/ _expr_3:any;
  /*private*/ _expr_4:any;
  /*private*/ _expr_5:any;
  /*private*/ _expr_6:any;
  /*private*/ _expr_7:any;
  /*private*/ _expr_8:any;
  /*private*/ _expr_9:any;
  /*private*/ _expr_10:any;
  /*private*/ _expr_11:any;
  /*private*/ _expr_12:any;
  /*private*/ _expr_13:any;
  /*private*/ _expr_14:any;
  /*private*/ _expr_15:any;
  subscription0:any;
  constructor(p0:any) {
    this._changed = false;
    this.context = new import1.MdSlider(p0);
    this._expr_0 = import8.UNINITIALIZED;
    this._expr_1 = import8.UNINITIALIZED;
    this._expr_2 = import8.UNINITIALIZED;
    this._expr_3 = import8.UNINITIALIZED;
    this._expr_4 = import8.UNINITIALIZED;
    this._expr_5 = import8.UNINITIALIZED;
    this._expr_6 = import8.UNINITIALIZED;
    this._expr_7 = import8.UNINITIALIZED;
    this._expr_8 = import8.UNINITIALIZED;
    this._expr_9 = import8.UNINITIALIZED;
    this._expr_10 = import8.UNINITIALIZED;
    this._expr_11 = import8.UNINITIALIZED;
    this._expr_12 = import8.UNINITIALIZED;
    this._expr_13 = import8.UNINITIALIZED;
    this._expr_14 = import8.UNINITIALIZED;
    this._expr_15 = import8.UNINITIALIZED;
  }
  ngOnDetach(view:import9.AppView<any>,componentView:import9.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
    (this.subscription0 && this.subscription0.unsubscribe());
  }
  check_disabled(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import10.checkBinding(throwOnChange,this._expr_0,currValue))) {
      this._changed = true;
      this.context.disabled = currValue;
      this._expr_0 = currValue;
    }
  }
  check_thumbLabel(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import10.checkBinding(throwOnChange,this._expr_1,currValue))) {
      this._changed = true;
      this.context.thumbLabel = currValue;
      this._expr_1 = currValue;
    }
  }
  check_step(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import10.checkBinding(throwOnChange,this._expr_2,currValue))) {
      this._changed = true;
      this.context.step = currValue;
      this._expr_2 = currValue;
    }
  }
  check_tickInterval(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import10.checkBinding(throwOnChange,this._expr_3,currValue))) {
      this._changed = true;
      this.context.tickInterval = currValue;
      this._expr_3 = currValue;
    }
  }
  check_value(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import10.checkBinding(throwOnChange,this._expr_4,currValue))) {
      this._changed = true;
      this.context.value = currValue;
      this._expr_4 = currValue;
    }
  }
  check_min(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import10.checkBinding(throwOnChange,this._expr_5,currValue))) {
      this._changed = true;
      this.context.min = currValue;
      this._expr_5 = currValue;
    }
  }
  check_max(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import10.checkBinding(throwOnChange,this._expr_6,currValue))) {
      this._changed = true;
      this.context.max = currValue;
      this._expr_6 = currValue;
    }
  }
  ngDoCheck(view:import9.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    return changed;
  }
  checkHost(view:import9.AppView<any>,componentView:import9.AppView<any>,el:any,throwOnChange:boolean):void {
    const currVal_7:any = this.context.disabled;
    if (import10.checkBinding(throwOnChange,this._expr_7,currVal_7)) {
      view.renderer.setElementAttribute(el,'aria-disabled',((currVal_7 == null)? (null as any): currVal_7.toString()));
      this._expr_7 = currVal_7;
    }
    const currVal_8:any = this.context.max;
    if (import10.checkBinding(throwOnChange,this._expr_8,currVal_8)) {
      view.renderer.setElementAttribute(el,'aria-valuemax',((currVal_8 == null)? (null as any): currVal_8.toString()));
      this._expr_8 = currVal_8;
    }
    const currVal_9:any = this.context.min;
    if (import10.checkBinding(throwOnChange,this._expr_9,currVal_9)) {
      view.renderer.setElementAttribute(el,'aria-valuemin',((currVal_9 == null)? (null as any): currVal_9.toString()));
      this._expr_9 = currVal_9;
    }
    const currVal_10:any = this.context.value;
    if (import10.checkBinding(throwOnChange,this._expr_10,currVal_10)) {
      view.renderer.setElementAttribute(el,'aria-valuenow',((currVal_10 == null)? (null as any): currVal_10.toString()));
      this._expr_10 = currVal_10;
    }
    const currVal_11:any = this.context._isActive;
    if (import10.checkBinding(throwOnChange,this._expr_11,currVal_11)) {
      view.renderer.setElementClass(el,'md-slider-active',currVal_11);
      this._expr_11 = currVal_11;
    }
    const currVal_12:any = this.context.disabled;
    if (import10.checkBinding(throwOnChange,this._expr_12,currVal_12)) {
      view.renderer.setElementClass(el,'md-slider-disabled',currVal_12);
      this._expr_12 = currVal_12;
    }
    const currVal_13:any = this.context.tickInterval;
    if (import10.checkBinding(throwOnChange,this._expr_13,currVal_13)) {
      view.renderer.setElementClass(el,'md-slider-has-ticks',currVal_13);
      this._expr_13 = currVal_13;
    }
    const currVal_14:any = this.context._isSliding;
    if (import10.checkBinding(throwOnChange,this._expr_14,currVal_14)) {
      view.renderer.setElementClass(el,'md-slider-sliding',currVal_14);
      this._expr_14 = currVal_14;
    }
    const currVal_15:any = this.context.thumbLabel;
    if (import10.checkBinding(throwOnChange,this._expr_15,currVal_15)) {
      view.renderer.setElementClass(el,'md-slider-thumb-label-showing',currVal_15);
      this._expr_15 = currVal_15;
    }
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    if ((eventName == 'blur')) {
      const pd_sub_0:any = ((<any>this.context._onBlur()) !== false);
      result = (pd_sub_0 && result);
    }
    if ((eventName == 'click')) {
      const pd_sub_1:any = ((<any>this.context._onClick($event)) !== false);
      result = (pd_sub_1 && result);
    }
    if ((eventName == 'mouseenter')) {
      const pd_sub_2:any = ((<any>this.context._onMouseenter()) !== false);
      result = (pd_sub_2 && result);
    }
    if ((eventName == 'slide')) {
      const pd_sub_3:any = ((<any>this.context._onSlide($event)) !== false);
      result = (pd_sub_3 && result);
    }
    if ((eventName == 'slideend')) {
      const pd_sub_4:any = ((<any>this.context._onSlideEnd()) !== false);
      result = (pd_sub_4 && result);
    }
    if ((eventName == 'slidestart')) {
      const pd_sub_5:any = ((<any>this.context._onSlideStart($event)) !== false);
      result = (pd_sub_5 && result);
    }
    return result;
  }
  subscribe(view:import9.AppView<any>,_eventHandler:any,emit0:boolean):void {
    this._eventHandler = _eventHandler;
    if (emit0) { (this.subscription0 = this.context.change.subscribe(_eventHandler.bind(view,'change'))); }
  }
}
  const nodeDebugInfos_MdSlider_Host0:import11.StaticNodeDebugInfo[] = [new import11.StaticNodeDebugInfo([
    import1.MdSlider,
    import12.NG_VALUE_ACCESSOR
  ]
,import1.MdSlider,{})];
var renderType_MdSlider_Host:import13.RenderComponentType = import10.createRenderComponentType('',0,import14.ViewEncapsulation.None,([] as any[]),{});
class View_MdSlider_Host0 extends import9.DebugAppView<any> {
  _el_0:any;
  compView_0:import9.AppView<import1.MdSlider>;
  _MdSlider_0_3:Wrapper_MdSlider;
  __NG_VALUE_ACCESSOR_0_4:any[];
  constructor(viewUtils:import10.ViewUtils,parentView:import9.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_MdSlider_Host0,renderType_MdSlider_Host,import15.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import8.ChangeDetectorStatus.CheckAlways,nodeDebugInfos_MdSlider_Host0);
  }
  get _NG_VALUE_ACCESSOR_0_4():any[] {
    this.debug(0,0,0);
    if ((this.__NG_VALUE_ACCESSOR_0_4 == null)) { (this.__NG_VALUE_ACCESSOR_0_4 = [this._MdSlider_0_3.context]); }
    return this.__NG_VALUE_ACCESSOR_0_4;
  }
  createInternal(rootSelector:string):import16.ComponentRef<any> {
    this._el_0 = import10.selectOrCreateRenderHostElement(this.renderer,'md-slider',new import10.InlineArray2(2,'tabindex','0'),rootSelector,this.debug(0,0,0));
    this.compView_0 = new View_MdSlider0(this.viewUtils,this,0,this._el_0);
    this._MdSlider_0_3 = new Wrapper_MdSlider(new import17.ElementRef(this._el_0));
    this.compView_0.create(this._MdSlider_0_3.context);
    var disposable_0:Function = import10.subscribeToRenderElement(this,this._el_0,new import10.InlineArray16(12,'blur',(null as any),'click',(null as any),'mouseenter',(null as any),'slide',(null as any),'slideend',(null as any),'slidestart',(null as any)),this.eventHandler(this.handleEvent_0));
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),[disposable_0]);
    return new import16.ComponentRef_<any>(0,this,this._el_0,this._MdSlider_0_3.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import1.MdSlider) && (0 === requestNodeIndex))) { return this._MdSlider_0_3.context; }
    if (((token === import12.NG_VALUE_ACCESSOR) && (0 === requestNodeIndex))) { return this._NG_VALUE_ACCESSOR_0_4; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this.debug(0,0,0);
    this._MdSlider_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    this._MdSlider_0_3.checkHost(this,this.compView_0,this._el_0,throwOnChange);
    this.compView_0.detectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
    this._MdSlider_0_3.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  handleEvent_0(eventName:string,$event:any):boolean {
    this.debug(0,0,0);
    this.compView_0.markPathToRootAsCheckOnce();
    var result:boolean = true;
    result = (this._MdSlider_0_3.handleEvent(eventName,$event) && result);
    return result;
  }
}
export const MdSliderNgFactory:import16.ComponentFactory<import1.MdSlider> = new import16.ComponentFactory<import1.MdSlider>('md-slider',View_MdSlider_Host0,import1.MdSlider);
const styles_MdSlider:any[] = [import18.styles];
const nodeDebugInfos_MdSlider0:import11.StaticNodeDebugInfo[] = [
  new import11.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import11.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import11.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import11.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import11.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import11.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import11.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import11.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import11.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import11.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import11.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import11.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import11.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import11.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import11.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import11.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import11.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import11.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import11.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import11.StaticNodeDebugInfo(([] as any[]),(null as any),{})
]
;
var renderType_MdSlider:import13.RenderComponentType = import10.createRenderComponentType('/Users/jessebowden/ichuwt/frontend/node_modules/@angular/material/slider/slider.html',0,import14.ViewEncapsulation.None,styles_MdSlider,{});
export class View_MdSlider0 extends import9.DebugAppView<import1.MdSlider> {
  _el_0:any;
  _text_1:any;
  _el_2:any;
  _text_3:any;
  _el_4:any;
  _text_5:any;
  _el_6:any;
  _text_7:any;
  _text_8:any;
  _el_9:any;
  _text_10:any;
  _el_11:any;
  _text_12:any;
  _el_13:any;
  _text_14:any;
  _el_15:any;
  _text_16:any;
  _text_17:any;
  _text_18:any;
  _text_19:any;
  /*private*/ _expr_20:any;
  /*private*/ _expr_21:any;
  /*private*/ _expr_22:any;
  /*private*/ _expr_23:any;
  /*private*/ _expr_24:any;
  constructor(viewUtils:import10.ViewUtils,parentView:import9.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_MdSlider0,renderType_MdSlider,import15.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import8.ChangeDetectorStatus.CheckAlways,nodeDebugInfos_MdSlider0);
    this._expr_20 = import8.UNINITIALIZED;
    this._expr_21 = import8.UNINITIALIZED;
    this._expr_22 = import8.UNINITIALIZED;
    this._expr_23 = import8.UNINITIALIZED;
    this._expr_24 = import8.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import16.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this._el_0 = import10.createRenderElement(this.renderer,parentRenderNode,'div',new import10.InlineArray2(2,'class','md-slider-track'),this.debug(0,0,0));
    this._text_1 = this.renderer.createText(this._el_0,'\n  ',this.debug(1,0,29));
    this._el_2 = import10.createRenderElement(this.renderer,this._el_0,'div',new import10.InlineArray2(2,'class','md-slider-track-fill'),this.debug(2,1,2));
    this._text_3 = this.renderer.createText(this._el_0,'\n  ',this.debug(3,1,81));
    this._el_4 = import10.createRenderElement(this.renderer,this._el_0,'div',new import10.InlineArray2(2,'class','md-slider-ticks-container'),this.debug(4,2,2));
    this._text_5 = this.renderer.createText(this._el_4,'\n    ',this.debug(5,2,87));
    this._el_6 = import10.createRenderElement(this.renderer,this._el_4,'div',new import10.InlineArray2(2,'class','md-slider-ticks'),this.debug(6,3,4));
    this._text_7 = this.renderer.createText(this._el_4,'\n  ',this.debug(7,4,60));
    this._text_8 = this.renderer.createText(this._el_0,'\n  ',this.debug(8,5,8));
    this._el_9 = import10.createRenderElement(this.renderer,this._el_0,'div',new import10.InlineArray2(2,'class','md-slider-thumb-container'),this.debug(9,6,2));
    this._text_10 = this.renderer.createText(this._el_9,'\n    ',this.debug(10,6,41));
    this._el_11 = import10.createRenderElement(this.renderer,this._el_9,'div',new import10.InlineArray2(2,'class','md-slider-thumb'),this.debug(11,7,4));
    this._text_12 = this.renderer.createText(this._el_9,'\n    ',this.debug(12,7,39));
    this._el_13 = import10.createRenderElement(this.renderer,this._el_9,'div',new import10.InlineArray2(2,'class','md-slider-thumb-label'),this.debug(13,8,4));
    this._text_14 = this.renderer.createText(this._el_13,'\n      ',this.debug(14,8,39));
    this._el_15 = import10.createRenderElement(this.renderer,this._el_13,'span',new import10.InlineArray2(2,'class','md-slider-thumb-label-text'),this.debug(15,9,6));
    this._text_16 = this.renderer.createText(this._el_15,'',this.debug(16,9,47));
    this._text_17 = this.renderer.createText(this._el_13,'\n    ',this.debug(17,9,63));
    this._text_18 = this.renderer.createText(this._el_9,'\n  ',this.debug(18,10,10));
    this._text_19 = this.renderer.createText(this._el_0,'\n',this.debug(19,11,8));
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1,
      this._el_2,
      this._text_3,
      this._el_4,
      this._text_5,
      this._el_6,
      this._text_7,
      this._text_8,
      this._el_9,
      this._text_10,
      this._el_11,
      this._text_12,
      this._el_13,
      this._text_14,
      this._el_15,
      this._text_16,
      this._text_17,
      this._text_18,
      this._text_19
    ]
    ),(null as any));
    return (null as any);
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this.debug(2,1,36);
    const currVal_20:any = this.context.trackFillFlexBasis;
    if (import10.checkBinding(throwOnChange,this._expr_20,currVal_20)) {
      this.renderer.setElementStyle(this._el_2,'flexBasis',((this.viewUtils.sanitizer.sanitize(import19.SecurityContext.STYLE,currVal_20) == null)? (null as any): this.viewUtils.sanitizer.sanitize(import19.SecurityContext.STYLE,currVal_20).toString()));
      this._expr_20 = currVal_20;
    }
    this.debug(4,2,41);
    const currVal_21:any = this.context.ticksContainerMarginLeft;
    if (import10.checkBinding(throwOnChange,this._expr_21,currVal_21)) {
      this.renderer.setElementStyle(this._el_4,'marginLeft',((this.viewUtils.sanitizer.sanitize(import19.SecurityContext.STYLE,currVal_21) == null)? (null as any): this.viewUtils.sanitizer.sanitize(import19.SecurityContext.STYLE,currVal_21).toString()));
      this._expr_21 = currVal_21;
    }
    this.debug(6,3,33);
    const currVal_22:any = this.context.ticksMarginLeft;
    if (import10.checkBinding(throwOnChange,this._expr_22,currVal_22)) {
      this.renderer.setElementStyle(this._el_6,'marginLeft',((this.viewUtils.sanitizer.sanitize(import19.SecurityContext.STYLE,currVal_22) == null)? (null as any): this.viewUtils.sanitizer.sanitize(import19.SecurityContext.STYLE,currVal_22).toString()));
      this._expr_22 = currVal_22;
    }
    this.debug(6,4,9);
    const currVal_23:any = this.context.ticksBackgroundSize;
    if (import10.checkBinding(throwOnChange,this._expr_23,currVal_23)) {
      this.renderer.setElementStyle(this._el_6,'backgroundSize',((this.viewUtils.sanitizer.sanitize(import19.SecurityContext.STYLE,currVal_23) == null)? (null as any): this.viewUtils.sanitizer.sanitize(import19.SecurityContext.STYLE,currVal_23).toString()));
      this._expr_23 = currVal_23;
    }
    this.debug(16,9,47);
    const currVal_24:any = import10.inlineInterpolate(1,'',this.context.value,'');
    if (import10.checkBinding(throwOnChange,this._expr_24,currVal_24)) {
      this.renderer.setText(this._text_16,currVal_24);
      this._expr_24 = currVal_24;
    }
  }
}