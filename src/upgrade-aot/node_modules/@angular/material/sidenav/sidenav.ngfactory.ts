/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from '@angular/core/src/linker/ng_module_factory';
import * as import1 from '@angular/material/sidenav/sidenav';
import * as import2 from '@angular/common/src/common_module';
import * as import3 from '@angular/common/src/localization';
import * as import4 from '@angular/core/src/di/injector';
import * as import5 from '@angular/core/src/i18n/tokens';
import * as import6 from '@angular/core/src/linker/view';
import * as import7 from '@angular/core/src/change_detection/change_detection';
import * as import8 from '@angular/core/src/linker/view_utils';
import * as import9 from '@angular/core/src/linker/debug_context';
import * as import10 from '@angular/core/src/render/api';
import * as import11 from '@angular/core/src/metadata/view';
import * as import12 from '@angular/core/src/linker/query_list';
import * as import13 from '@angular/core/src/linker/view_type';
import * as import14 from '@angular/core/src/linker/component_factory';
import * as import15 from '@angular/material/core/rtl/dir';
import * as import16 from '@angular/core/src/linker/element_ref';
import * as import17 from './sidenav.css';
import * as import18 from './sidenav-transitions.css';
import * as import19 from '@angular/common/src/directives/ng_style';
import * as import20 from '../../common/src/directives/ng_style.ngfactory';
import * as import21 from '@angular/core/src/change_detection/differs/keyvalue_differs';
class MdSidenavModuleInjector extends import0.NgModuleInjector<import1.MdSidenavModule> {
  _CommonModule_0:import2.CommonModule;
  _MdSidenavModule_1:import1.MdSidenavModule;
  __NgLocalization_2:import3.NgLocaleLocalization;
  constructor(parent:import4.Injector) {
    super(parent,([] as any[]),([] as any[]));
  }
  get _NgLocalization_2():import3.NgLocaleLocalization {
    if ((this.__NgLocalization_2 == null)) { (this.__NgLocalization_2 = new import3.NgLocaleLocalization(this.parent.get(import5.LOCALE_ID))); }
    return this.__NgLocalization_2;
  }
  createInternal():import1.MdSidenavModule {
    this._CommonModule_0 = new import2.CommonModule();
    this._MdSidenavModule_1 = new import1.MdSidenavModule();
    return this._MdSidenavModule_1;
  }
  getInternal(token:any,notFoundResult:any):any {
    if ((token === import2.CommonModule)) { return this._CommonModule_0; }
    if ((token === import1.MdSidenavModule)) { return this._MdSidenavModule_1; }
    if ((token === import3.NgLocalization)) { return this._NgLocalization_2; }
    return notFoundResult;
  }
  destroyInternal():void {
  }
}
export const MdSidenavModuleNgFactory:import0.NgModuleFactory<import1.MdSidenavModule> = new import0.NgModuleFactory(MdSidenavModuleInjector,import1.MdSidenavModule);
export class Wrapper_MdSidenavLayout {
  /*private*/ _eventHandler:Function;
  context:import1.MdSidenavLayout;
  /*private*/ _changed:boolean;
  constructor(p0:any,p1:any,p2:any) {
    this._changed = false;
    this.context = new import1.MdSidenavLayout(p0,p1,p2);
  }
  ngOnDetach(view:import6.AppView<any>,componentView:import6.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
  }
  ngDoCheck(view:import6.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    return changed;
  }
  checkHost(view:import6.AppView<any>,componentView:import6.AppView<any>,el:any,throwOnChange:boolean):void {
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import6.AppView<any>,_eventHandler:any):void {
    this._eventHandler = _eventHandler;
  }
}
export class Wrapper_MdSidenav {
  /*private*/ _eventHandler:Function;
  context:import1.MdSidenav;
  /*private*/ _changed:boolean;
  /*private*/ _expr_0:any;
  /*private*/ _expr_1:any;
  /*private*/ _expr_2:any;
  /*private*/ _expr_3:any;
  /*private*/ _expr_4:any;
  /*private*/ _expr_5:any;
  /*private*/ _expr_6:any;
  /*private*/ _expr_7:any;
  /*private*/ _expr_8:any;
  /*private*/ _expr_9:any;
  /*private*/ _expr_10:any;
  /*private*/ _expr_11:any;
  /*private*/ _expr_12:any;
  subscription0:any;
  subscription1:any;
  subscription2:any;
  subscription3:any;
  subscription4:any;
  constructor(p0:any) {
    this._changed = false;
    this.context = new import1.MdSidenav(p0);
    this._expr_0 = import7.UNINITIALIZED;
    this._expr_1 = import7.UNINITIALIZED;
    this._expr_2 = import7.UNINITIALIZED;
    this._expr_3 = import7.UNINITIALIZED;
    this._expr_4 = import7.UNINITIALIZED;
    this._expr_5 = import7.UNINITIALIZED;
    this._expr_6 = import7.UNINITIALIZED;
    this._expr_7 = import7.UNINITIALIZED;
    this._expr_8 = import7.UNINITIALIZED;
    this._expr_9 = import7.UNINITIALIZED;
    this._expr_10 = import7.UNINITIALIZED;
    this._expr_11 = import7.UNINITIALIZED;
    this._expr_12 = import7.UNINITIALIZED;
  }
  ngOnDetach(view:import6.AppView<any>,componentView:import6.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
    (this.subscription0 && this.subscription0.unsubscribe());
    (this.subscription1 && this.subscription1.unsubscribe());
    (this.subscription2 && this.subscription2.unsubscribe());
    (this.subscription3 && this.subscription3.unsubscribe());
    (this.subscription4 && this.subscription4.unsubscribe());
  }
  check_align(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import8.checkBinding(throwOnChange,this._expr_0,currValue))) {
      this._changed = true;
      this.context.align = currValue;
      this._expr_0 = currValue;
    }
  }
  check_mode(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import8.checkBinding(throwOnChange,this._expr_1,currValue))) {
      this._changed = true;
      this.context.mode = currValue;
      this._expr_1 = currValue;
    }
  }
  check_opened(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import8.checkBinding(throwOnChange,this._expr_2,currValue))) {
      this._changed = true;
      this.context.opened = currValue;
      this._expr_2 = currValue;
    }
  }
  ngDoCheck(view:import6.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    return changed;
  }
  checkHost(view:import6.AppView<any>,componentView:import6.AppView<any>,el:any,throwOnChange:boolean):void {
    const currVal_3:any = (null as any);
    if (import8.checkBinding(throwOnChange,this._expr_3,currVal_3)) {
      view.renderer.setElementAttribute(el,'align',((currVal_3 == null)? (null as any): currVal_3.toString()));
      this._expr_3 = currVal_3;
    }
    const currVal_4:any = this.context._isClosed;
    if (import8.checkBinding(throwOnChange,this._expr_4,currVal_4)) {
      view.renderer.setElementClass(el,'md-sidenav-closed',currVal_4);
      this._expr_4 = currVal_4;
    }
    const currVal_5:any = this.context._isClosing;
    if (import8.checkBinding(throwOnChange,this._expr_5,currVal_5)) {
      view.renderer.setElementClass(el,'md-sidenav-closing',currVal_5);
      this._expr_5 = currVal_5;
    }
    const currVal_6:any = this.context._isEnd;
    if (import8.checkBinding(throwOnChange,this._expr_6,currVal_6)) {
      view.renderer.setElementClass(el,'md-sidenav-end',currVal_6);
      this._expr_6 = currVal_6;
    }
    const currVal_7:any = this.context._isOpened;
    if (import8.checkBinding(throwOnChange,this._expr_7,currVal_7)) {
      view.renderer.setElementClass(el,'md-sidenav-opened',currVal_7);
      this._expr_7 = currVal_7;
    }
    const currVal_8:any = this.context._isOpening;
    if (import8.checkBinding(throwOnChange,this._expr_8,currVal_8)) {
      view.renderer.setElementClass(el,'md-sidenav-opening',currVal_8);
      this._expr_8 = currVal_8;
    }
    const currVal_9:any = this.context._modeOver;
    if (import8.checkBinding(throwOnChange,this._expr_9,currVal_9)) {
      view.renderer.setElementClass(el,'md-sidenav-over',currVal_9);
      this._expr_9 = currVal_9;
    }
    const currVal_10:any = this.context._modePush;
    if (import8.checkBinding(throwOnChange,this._expr_10,currVal_10)) {
      view.renderer.setElementClass(el,'md-sidenav-push',currVal_10);
      this._expr_10 = currVal_10;
    }
    const currVal_11:any = this.context._modeSide;
    if (import8.checkBinding(throwOnChange,this._expr_11,currVal_11)) {
      view.renderer.setElementClass(el,'md-sidenav-side',currVal_11);
      this._expr_11 = currVal_11;
    }
    const currVal_12:boolean = !this.context.valid;
    if (import8.checkBinding(throwOnChange,this._expr_12,currVal_12)) {
      view.renderer.setElementClass(el,'md-sidenav-invalid',currVal_12);
      this._expr_12 = currVal_12;
    }
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    if ((eventName == 'transitionend')) {
      const pd_sub_0:any = ((<any>this.context._onTransitionEnd($event)) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
  subscribe(view:import6.AppView<any>,_eventHandler:any,emit0:boolean,emit1:boolean,emit2:boolean,emit3:boolean,emit4:boolean):void {
    this._eventHandler = _eventHandler;
    if (emit0) { (this.subscription0 = this.context.onOpenStart.subscribe(_eventHandler.bind(view,'open-start'))); }
    if (emit1) { (this.subscription1 = this.context.onOpen.subscribe(_eventHandler.bind(view,'open'))); }
    if (emit2) { (this.subscription2 = this.context.onCloseStart.subscribe(_eventHandler.bind(view,'close-start'))); }
    if (emit3) { (this.subscription3 = this.context.onClose.subscribe(_eventHandler.bind(view,'close'))); }
    if (emit4) { (this.subscription4 = this.context.onAlignChanged.subscribe(_eventHandler.bind(view,'align-changed'))); }
  }
}
const nodeDebugInfos_MdSidenavLayout_Host0:import9.StaticNodeDebugInfo[] = [new import9.StaticNodeDebugInfo([import1.MdSidenavLayout],import1.MdSidenavLayout,{})];
var renderType_MdSidenavLayout_Host:import10.RenderComponentType = import8.createRenderComponentType('',0,import11.ViewEncapsulation.None,([] as any[]),{});
class View_MdSidenavLayout_Host0 extends import6.DebugAppView<any> {
  _el_0:any;
  compView_0:import6.AppView<import1.MdSidenavLayout>;
  _MdSidenavLayout_0_3:Wrapper_MdSidenavLayout;
  _query_MdSidenav_0_0:import12.QueryList<any>;
  constructor(viewUtils:import8.ViewUtils,parentView:import6.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_MdSidenavLayout_Host0,renderType_MdSidenavLayout_Host,import13.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways,nodeDebugInfos_MdSidenavLayout_Host0);
  }
  createInternal(rootSelector:string):import14.ComponentRef<any> {
    this._el_0 = import8.selectOrCreateRenderHostElement(this.renderer,'md-sidenav-layout',import8.EMPTY_INLINE_ARRAY,rootSelector,this.debug(0,0,0));
    this.compView_0 = new View_MdSidenavLayout0(this.viewUtils,this,0,this._el_0);
    this._MdSidenavLayout_0_3 = new Wrapper_MdSidenavLayout(this.injectorGet(import15.Dir,this.parentIndex,(null as any)),new import16.ElementRef(this._el_0),this.renderer);
    this._query_MdSidenav_0_0 = new import12.QueryList<any>();
    this.compView_0.create(this._MdSidenavLayout_0_3.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return new import14.ComponentRef_<any>(0,this,this._el_0,this._MdSidenavLayout_0_3.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import1.MdSidenavLayout) && (0 === requestNodeIndex))) { return this._MdSidenavLayout_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this.debug(0,0,0);
    this._MdSidenavLayout_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    if (!throwOnChange) {
      if (this._query_MdSidenav_0_0.dirty) {
        this._query_MdSidenav_0_0.reset(([] as any[]));
        this._MdSidenavLayout_0_3.context._sidenavs = this._query_MdSidenav_0_0;
        this._query_MdSidenav_0_0.notifyOnChanges();
      }
      this.debug(0,0,0);
      if ((this.numberOfChecks === 0)) { this._MdSidenavLayout_0_3.context.ngAfterContentInit(); }
    }
    this.compView_0.detectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  visitProjectableNodesInternal(nodeIndex:number,ngContentIndex:number,cb:any,ctx:any):void {
    if (((nodeIndex == 0) && (ngContentIndex == 0))) {  }
    if (((nodeIndex == 0) && (ngContentIndex == 1))) {  }
  }
}
export const MdSidenavLayoutNgFactory:import14.ComponentFactory<import1.MdSidenavLayout> = new import14.ComponentFactory<import1.MdSidenavLayout>('md-sidenav-layout',View_MdSidenavLayout_Host0,import1.MdSidenavLayout);
const styles_MdSidenavLayout:any[] = [
  import17.styles,
  import18.styles
]
;
const nodeDebugInfos_MdSidenavLayout0:import9.StaticNodeDebugInfo[] = [
  new import9.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import9.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import9.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import9.StaticNodeDebugInfo([import19.NgStyle],(null as any),{}),
  new import9.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import9.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import9.StaticNodeDebugInfo(([] as any[]),(null as any),{})
]
;
var renderType_MdSidenavLayout:import10.RenderComponentType = import8.createRenderComponentType('/Users/jessebowden/ichuwt/frontend/node_modules/@angular/material/sidenav/sidenav.html',2,import11.ViewEncapsulation.None,styles_MdSidenavLayout,{});
export class View_MdSidenavLayout0 extends import6.DebugAppView<import1.MdSidenavLayout> {
  _el_0:any;
  _text_1:any;
  _text_2:any;
  _el_3:any;
  _NgStyle_3_3:import20.Wrapper_NgStyle;
  _text_4:any;
  _text_5:any;
  _text_6:any;
  /*private*/ _expr_8:any;
  constructor(viewUtils:import8.ViewUtils,parentView:import6.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_MdSidenavLayout0,renderType_MdSidenavLayout,import13.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways,nodeDebugInfos_MdSidenavLayout0);
    this._expr_8 = import7.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import14.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this._el_0 = import8.createRenderElement(this.renderer,parentRenderNode,'div',new import8.InlineArray2(2,'class','md-sidenav-backdrop'),this.debug(0,0,0));
    this._text_1 = this.renderer.createText(parentRenderNode,'\n\n',this.debug(1,1,59));
    this.debug((null as any),3,0);
    this.projectNodes(parentRenderNode,0);
    this._text_2 = this.renderer.createText(parentRenderNode,'\n\n',this.debug(2,3,45));
    this._el_3 = import8.createRenderElement(this.renderer,parentRenderNode,'div',new import8.InlineArray2(2,'class','md-sidenav-content'),this.debug(3,5,0));
    this._NgStyle_3_3 = new import20.Wrapper_NgStyle(this.parentView.injectorGet(import21.KeyValueDiffers,this.parentIndex),new import16.ElementRef(this._el_3),this.renderer);
    this._text_4 = this.renderer.createText(this._el_3,'\n  ',this.debug(4,5,57));
    this.debug((null as any),6,2);
    this.projectNodes(this._el_3,1);
    this._text_5 = this.renderer.createText(this._el_3,'\n',this.debug(5,6,27));
    this._text_6 = this.renderer.createText(parentRenderNode,'\n',this.debug(6,7,6));
    var disposable_0:Function = import8.subscribeToRenderElement(this,this._el_0,new import8.InlineArray2(2,'click',(null as any)),this.eventHandler(this.handleEvent_0));
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1,
      this._text_2,
      this._el_3,
      this._text_4,
      this._text_5,
      this._text_6
    ]
    ),[disposable_0]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import19.NgStyle) && ((3 <= requestNodeIndex) && (requestNodeIndex <= 5)))) { return this._NgStyle_3_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this.debug(3,5,32);
    const currVal_3_0_0:any = this.context._getStyles();
    this._NgStyle_3_3.check_ngStyle(currVal_3_0_0,throwOnChange,false);
    this._NgStyle_3_3.ngDoCheck(this,this._el_3,throwOnChange);
    this.debug(0,1,5);
    const currVal_8:any = this.context._isShowingBackdrop();
    if (import8.checkBinding(throwOnChange,this._expr_8,currVal_8)) {
      this.renderer.setElementClass(this._el_0,'md-sidenav-shown',currVal_8);
      this._expr_8 = currVal_8;
    }
  }
  handleEvent_0(eventName:string,$event:any):boolean {
    this.debug(0,0,0);
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'click')) {
      const pd_sub_0:any = ((<any>this.context._closeModalSidenav()) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
}
const nodeDebugInfos_MdSidenav_Host0:import9.StaticNodeDebugInfo[] = [new import9.StaticNodeDebugInfo([import1.MdSidenav],import1.MdSidenav,{})];
var renderType_MdSidenav_Host:import10.RenderComponentType = import8.createRenderComponentType('',0,import11.ViewEncapsulation.None,([] as any[]),{});
class View_MdSidenav_Host0 extends import6.DebugAppView<any> {
  _el_0:any;
  compView_0:import6.AppView<import1.MdSidenav>;
  _MdSidenav_0_3:Wrapper_MdSidenav;
  constructor(viewUtils:import8.ViewUtils,parentView:import6.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_MdSidenav_Host0,renderType_MdSidenav_Host,import13.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways,nodeDebugInfos_MdSidenav_Host0);
  }
  createInternal(rootSelector:string):import14.ComponentRef<any> {
    this._el_0 = import8.selectOrCreateRenderHostElement(this.renderer,'md-sidenav',import8.EMPTY_INLINE_ARRAY,rootSelector,this.debug(0,0,0));
    this.compView_0 = new View_MdSidenav0(this.viewUtils,this,0,this._el_0);
    this._MdSidenav_0_3 = new Wrapper_MdSidenav(new import16.ElementRef(this._el_0));
    this.compView_0.create(this._MdSidenav_0_3.context);
    var disposable_0:Function = import8.subscribeToRenderElement(this,this._el_0,new import8.InlineArray2(2,'transitionend',(null as any)),this.eventHandler(this.handleEvent_0));
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),[disposable_0]);
    return new import14.ComponentRef_<any>(0,this,this._el_0,this._MdSidenav_0_3.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import1.MdSidenav) && (0 === requestNodeIndex))) { return this._MdSidenav_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this.debug(0,0,0);
    if (this._MdSidenav_0_3.ngDoCheck(this,this._el_0,throwOnChange)) { this.compView_0.markAsCheckOnce(); }
    if (!throwOnChange) {
      this.debug(0,0,0);
      if ((this.numberOfChecks === 0)) { this._MdSidenav_0_3.context.ngAfterContentInit(); }
    }
    this._MdSidenav_0_3.checkHost(this,this.compView_0,this._el_0,throwOnChange);
    this.compView_0.detectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
    this._MdSidenav_0_3.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  visitProjectableNodesInternal(nodeIndex:number,ngContentIndex:number,cb:any,ctx:any):void {
    if (((nodeIndex == 0) && (ngContentIndex == 0))) {  }
  }
  handleEvent_0(eventName:string,$event:any):boolean {
    this.debug(0,0,0);
    this.compView_0.markPathToRootAsCheckOnce();
    var result:boolean = true;
    result = (this._MdSidenav_0_3.handleEvent(eventName,$event) && result);
    return result;
  }
}
export const MdSidenavNgFactory:import14.ComponentFactory<import1.MdSidenav> = new import14.ComponentFactory<import1.MdSidenav>('md-sidenav',View_MdSidenav_Host0,import1.MdSidenav);
const styles_MdSidenav:any[] = ([] as any[]);
const nodeDebugInfos_MdSidenav0:import9.StaticNodeDebugInfo[] = ([] as any[]);
var renderType_MdSidenav:import10.RenderComponentType = import8.createRenderComponentType('/Users/jessebowden/ichuwt/frontend/node_modules/@angular/material/sidenav/sidenav.d.ts class MdSidenav - inline template',1,import11.ViewEncapsulation.None,styles_MdSidenav,{});
export class View_MdSidenav0 extends import6.DebugAppView<import1.MdSidenav> {
  constructor(viewUtils:import8.ViewUtils,parentView:import6.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_MdSidenav0,renderType_MdSidenav,import13.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckOnce,nodeDebugInfos_MdSidenav0);
  }
  createInternal(rootSelector:string):import14.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this.debug((null as any),0,0);
    this.projectNodes(parentRenderNode,0);
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): ([] as any[])),(null as any));
    return (null as any);
  }
}