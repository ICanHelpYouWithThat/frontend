/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from '@angular/core/src/linker/ng_module_factory';
import * as import1 from '@angular/material/core/portal/portal-directives';
import * as import2 from '@angular/core/src/di/injector';
import * as import3 from '@angular/core/src/linker/view';
import * as import4 from '@angular/core/src/change_detection/change_detection';
import * as import5 from '@angular/core/src/linker/view_utils';
class PortalModuleInjector extends import0.NgModuleInjector<import1.PortalModule> {
  _PortalModule_0:import1.PortalModule;
  constructor(parent:import2.Injector) {
    super(parent,([] as any[]),([] as any[]));
  }
  createInternal():import1.PortalModule {
    this._PortalModule_0 = new import1.PortalModule();
    return this._PortalModule_0;
  }
  getInternal(token:any,notFoundResult:any):any {
    if ((token === import1.PortalModule)) { return this._PortalModule_0; }
    return notFoundResult;
  }
  destroyInternal():void {
  }
}
export const PortalModuleNgFactory:import0.NgModuleFactory<import1.PortalModule> = new import0.NgModuleFactory(PortalModuleInjector,import1.PortalModule);
export class Wrapper_TemplatePortalDirective {
  /*private*/ _eventHandler:Function;
  context:import1.TemplatePortalDirective;
  /*private*/ _changed:boolean;
  constructor(p0:any,p1:any) {
    this._changed = false;
    this.context = new import1.TemplatePortalDirective(p0,p1);
  }
  ngOnDetach(view:import3.AppView<any>,componentView:import3.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
  }
  ngDoCheck(view:import3.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    return changed;
  }
  checkHost(view:import3.AppView<any>,componentView:import3.AppView<any>,el:any,throwOnChange:boolean):void {
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import3.AppView<any>,_eventHandler:any):void {
    this._eventHandler = _eventHandler;
  }
}
export class Wrapper_PortalHostDirective {
  /*private*/ _eventHandler:Function;
  context:import1.PortalHostDirective;
  /*private*/ _changed:boolean;
  /*private*/ _expr_0:any;
  constructor(p0:any,p1:any) {
    this._changed = false;
    this.context = new import1.PortalHostDirective(p0,p1);
    this._expr_0 = import4.UNINITIALIZED;
  }
  ngOnDetach(view:import3.AppView<any>,componentView:import3.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
    this.context.ngOnDestroy();
  }
  check_portal(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import5.checkBinding(throwOnChange,this._expr_0,currValue))) {
      this._changed = true;
      this.context.portal = currValue;
      this._expr_0 = currValue;
    }
  }
  ngDoCheck(view:import3.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    return changed;
  }
  checkHost(view:import3.AppView<any>,componentView:import3.AppView<any>,el:any,throwOnChange:boolean):void {
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import3.AppView<any>,_eventHandler:any):void {
    this._eventHandler = _eventHandler;
  }
}