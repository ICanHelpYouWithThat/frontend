/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from '@angular/core/src/linker/ng_module_factory';
import * as import1 from '@angular/material/module';
import * as import2 from '@angular/common/src/common_module';
import * as import3 from '@angular/material/core/ripple/ripple';
import * as import4 from '@angular/material/button/button';
import * as import5 from '@angular/material/card/card';
import * as import6 from '@angular/material/checkbox/checkbox';
import * as import7 from '@angular/material/core/line/line';
import * as import8 from '@angular/material/grid-list/grid-list';
import * as import9 from '@angular/forms/src/directives';
import * as import10 from '@angular/forms/src/form_providers';
import * as import11 from '@angular/material/input/input';
import * as import12 from '@angular/material/list/list';
import * as import13 from '@angular/material/progress-bar/progress-bar';
import * as import14 from '@angular/material/progress-circle/progress-circle';
import * as import15 from '@angular/material/sidenav/sidenav';
import * as import16 from '@angular/material/core/portal/portal-directives';
import * as import17 from '@angular/material/tabs/tabs';
import * as import18 from '@angular/material/toolbar/toolbar';
import * as import19 from '@angular/material/core/rtl/dir';
import * as import20 from '@angular/material/core/a11y/index';
import * as import21 from '@angular/material/button-toggle/button-toggle';
import * as import22 from '@angular/material/core/overlay/overlay-directives';
import * as import23 from '@angular/material/dialog/dialog';
import * as import24 from '@angular/http/src/http_module';
import * as import25 from '@angular/material/icon/icon';
import * as import26 from '@angular/material/menu/menu';
import * as import27 from '@angular/material/radio/radio';
import * as import28 from '@angular/material/slider/slider';
import * as import29 from '@angular/material/slide-toggle/slide-toggle';
import * as import30 from '@angular/material/snack-bar/snack-bar';
import * as import31 from '@angular/material/tooltip/tooltip';
import * as import32 from '@angular/material/core/compatibility/style-compatibility';
import * as import33 from '@angular/common/src/localization';
import * as import34 from '@angular/forms/src/directives/radio_control_value_accessor';
import * as import35 from '@angular/http/src/backends/browser_xhr';
import * as import36 from '@angular/http/src/base_response_options';
import * as import37 from '@angular/http/src/backends/xhr_backend';
import * as import38 from '@angular/http/src/base_request_options';
import * as import39 from '@angular/material/core/gestures/MdGestureConfig';
import * as import40 from '@angular/material/core/a11y/live-announcer';
import * as import41 from '@angular/material/core/a11y/interactivity-checker';
import * as import42 from '@angular/material/core/coordination/unique-selection-dispatcher';
import * as import43 from '@angular/material/core/overlay/overlay-container';
import * as import44 from '@angular/material/core/overlay/position/viewport-ruler';
import * as import45 from '@angular/material/core/overlay/position/overlay-position-builder';
import * as import46 from '@angular/material/core/overlay/overlay';
import * as import47 from '@angular/material/icon/icon-registry';
import * as import48 from '@angular/core/src/di/injector';
import * as import49 from './dialog/dialog-container.ngfactory';
import * as import50 from './snack-bar/snack-bar-container.ngfactory';
import * as import51 from './snack-bar/simple-snack-bar.ngfactory';
import * as import52 from './tooltip/tooltip.ngfactory';
import * as import53 from '@angular/core/src/i18n/tokens';
import * as import54 from '@angular/core/src/application_ref';
import * as import55 from '@angular/http/src/interfaces';
import * as import56 from '@angular/http/src/http';
import * as import57 from '@angular/platform-browser/src/dom/events/hammer_gestures';
class MaterialRootModuleInjector extends import0.NgModuleInjector<import1.MaterialRootModule> {
  _CommonModule_0:import2.CommonModule;
  _MdRippleModule_1:import3.MdRippleModule;
  _MdButtonModule_2:import4.MdButtonModule;
  _MdCardModule_3:import5.MdCardModule;
  _MdCheckboxModule_4:import6.MdCheckboxModule;
  _MdLineModule_5:import7.MdLineModule;
  _MdGridListModule_6:import8.MdGridListModule;
  _InternalFormsSharedModule_7:import9.InternalFormsSharedModule;
  _FormsModule_8:import10.FormsModule;
  _MdInputModule_9:import11.MdInputModule;
  _MdListModule_10:import12.MdListModule;
  _MdProgressBarModule_11:import13.MdProgressBarModule;
  _MdProgressCircleModule_12:import14.MdProgressCircleModule;
  _MdSidenavModule_13:import15.MdSidenavModule;
  _PortalModule_14:import16.PortalModule;
  _MdTabsModule_15:import17.MdTabsModule;
  _MdToolbarModule_16:import18.MdToolbarModule;
  _RtlModule_17:import19.RtlModule;
  _A11yModule_18:import20.A11yModule;
  _MdButtonToggleModule_19:import21.MdButtonToggleModule;
  _OverlayModule_20:import22.OverlayModule;
  _MdDialogModule_21:import23.MdDialogModule;
  _HttpModule_22:import24.HttpModule;
  _MdIconModule_23:import25.MdIconModule;
  _MdMenuModule_24:import26.MdMenuModule;
  _MdRadioModule_25:import27.MdRadioModule;
  _MdSliderModule_26:import28.MdSliderModule;
  _MdSlideToggleModule_27:import29.MdSlideToggleModule;
  _MdSnackBarModule_28:import30.MdSnackBarModule;
  _MdTooltipModule_29:import31.MdTooltipModule;
  _StyleCompatibilityModule_30:import32.StyleCompatibilityModule;
  _MaterialRootModule_31:import1.MaterialRootModule;
  __NgLocalization_32:import33.NgLocaleLocalization;
  __RadioControlRegistry_33:import34.RadioControlRegistry;
  __BrowserXhr_34:import35.BrowserXhr;
  __ResponseOptions_35:import36.BaseResponseOptions;
  __XSRFStrategy_36:any;
  __XHRBackend_37:import37.XHRBackend;
  __RequestOptions_38:import38.BaseRequestOptions;
  __Http_39:any;
  __HAMMER_GESTURE_CONFIG_40:import39.MdGestureConfig;
  __MdLiveAnnouncer_41:import40.MdLiveAnnouncer;
  __InteractivityChecker_42:import41.InteractivityChecker;
  __MdUniqueSelectionDispatcher_43:import42.MdUniqueSelectionDispatcher;
  __OverlayContainer_44:import43.OverlayContainer;
  __ViewportRuler_45:import44.ViewportRuler;
  __OverlayPositionBuilder_46:import45.OverlayPositionBuilder;
  __Overlay_47:import46.Overlay;
  __MdDialog_48:import23.MdDialog;
  __MdIconRegistry_49:import47.MdIconRegistry;
  __MdSnackBar_50:import30.MdSnackBar;
  constructor(parent:import48.Injector) {
    super(parent,[
      import49.MdDialogContainerNgFactory,
      import50.MdSnackBarContainerNgFactory,
      import51.SimpleSnackBarNgFactory,
      import52.TooltipComponentNgFactory
    ]
    ,([] as any[]));
  }
  get _NgLocalization_32():import33.NgLocaleLocalization {
    if ((this.__NgLocalization_32 == null)) { (this.__NgLocalization_32 = new import33.NgLocaleLocalization(this.parent.get(import53.LOCALE_ID))); }
    return this.__NgLocalization_32;
  }
  get _RadioControlRegistry_33():import34.RadioControlRegistry {
    if ((this.__RadioControlRegistry_33 == null)) { (this.__RadioControlRegistry_33 = new import34.RadioControlRegistry()); }
    return this.__RadioControlRegistry_33;
  }
  get _BrowserXhr_34():import35.BrowserXhr {
    if ((this.__BrowserXhr_34 == null)) { (this.__BrowserXhr_34 = new import35.BrowserXhr()); }
    return this.__BrowserXhr_34;
  }
  get _ResponseOptions_35():import36.BaseResponseOptions {
    if ((this.__ResponseOptions_35 == null)) { (this.__ResponseOptions_35 = new import36.BaseResponseOptions()); }
    return this.__ResponseOptions_35;
  }
  get _XSRFStrategy_36():any {
    if ((this.__XSRFStrategy_36 == null)) { (this.__XSRFStrategy_36 = import24._createDefaultCookieXSRFStrategy()); }
    return this.__XSRFStrategy_36;
  }
  get _XHRBackend_37():import37.XHRBackend {
    if ((this.__XHRBackend_37 == null)) { (this.__XHRBackend_37 = new import37.XHRBackend(this._BrowserXhr_34,this._ResponseOptions_35,this._XSRFStrategy_36)); }
    return this.__XHRBackend_37;
  }
  get _RequestOptions_38():import38.BaseRequestOptions {
    if ((this.__RequestOptions_38 == null)) { (this.__RequestOptions_38 = new import38.BaseRequestOptions()); }
    return this.__RequestOptions_38;
  }
  get _Http_39():any {
    if ((this.__Http_39 == null)) { (this.__Http_39 = import24.httpFactory(this._XHRBackend_37,this._RequestOptions_38)); }
    return this.__Http_39;
  }
  get _HAMMER_GESTURE_CONFIG_40():import39.MdGestureConfig {
    if ((this.__HAMMER_GESTURE_CONFIG_40 == null)) { (this.__HAMMER_GESTURE_CONFIG_40 = new import39.MdGestureConfig()); }
    return this.__HAMMER_GESTURE_CONFIG_40;
  }
  get _MdLiveAnnouncer_41():import40.MdLiveAnnouncer {
    if ((this.__MdLiveAnnouncer_41 == null)) { (this.__MdLiveAnnouncer_41 = new import40.MdLiveAnnouncer(this.parent.get(import40.LIVE_ANNOUNCER_ELEMENT_TOKEN,(null as any)))); }
    return this.__MdLiveAnnouncer_41;
  }
  get _InteractivityChecker_42():import41.InteractivityChecker {
    if ((this.__InteractivityChecker_42 == null)) { (this.__InteractivityChecker_42 = new import41.InteractivityChecker()); }
    return this.__InteractivityChecker_42;
  }
  get _MdUniqueSelectionDispatcher_43():import42.MdUniqueSelectionDispatcher {
    if ((this.__MdUniqueSelectionDispatcher_43 == null)) { (this.__MdUniqueSelectionDispatcher_43 = new import42.MdUniqueSelectionDispatcher()); }
    return this.__MdUniqueSelectionDispatcher_43;
  }
  get _OverlayContainer_44():import43.OverlayContainer {
    if ((this.__OverlayContainer_44 == null)) { (this.__OverlayContainer_44 = new import43.OverlayContainer()); }
    return this.__OverlayContainer_44;
  }
  get _ViewportRuler_45():import44.ViewportRuler {
    if ((this.__ViewportRuler_45 == null)) { (this.__ViewportRuler_45 = new import44.ViewportRuler()); }
    return this.__ViewportRuler_45;
  }
  get _OverlayPositionBuilder_46():import45.OverlayPositionBuilder {
    if ((this.__OverlayPositionBuilder_46 == null)) { (this.__OverlayPositionBuilder_46 = new import45.OverlayPositionBuilder(this._ViewportRuler_45)); }
    return this.__OverlayPositionBuilder_46;
  }
  get _Overlay_47():import46.Overlay {
    if ((this.__Overlay_47 == null)) { (this.__Overlay_47 = new import46.Overlay(this._OverlayContainer_44,this,this._OverlayPositionBuilder_46,this.parent.get(import54.ApplicationRef),this)); }
    return this.__Overlay_47;
  }
  get _MdDialog_48():import23.MdDialog {
    if ((this.__MdDialog_48 == null)) { (this.__MdDialog_48 = new import23.MdDialog(this._Overlay_47,this)); }
    return this.__MdDialog_48;
  }
  get _MdIconRegistry_49():import47.MdIconRegistry {
    if ((this.__MdIconRegistry_49 == null)) { (this.__MdIconRegistry_49 = new import47.MdIconRegistry(this._Http_39)); }
    return this.__MdIconRegistry_49;
  }
  get _MdSnackBar_50():import30.MdSnackBar {
    if ((this.__MdSnackBar_50 == null)) { (this.__MdSnackBar_50 = new import30.MdSnackBar(this._Overlay_47,this._MdLiveAnnouncer_41)); }
    return this.__MdSnackBar_50;
  }
  createInternal():import1.MaterialRootModule {
    this._CommonModule_0 = new import2.CommonModule();
    this._MdRippleModule_1 = new import3.MdRippleModule();
    this._MdButtonModule_2 = new import4.MdButtonModule();
    this._MdCardModule_3 = new import5.MdCardModule();
    this._MdCheckboxModule_4 = new import6.MdCheckboxModule();
    this._MdLineModule_5 = new import7.MdLineModule();
    this._MdGridListModule_6 = new import8.MdGridListModule();
    this._InternalFormsSharedModule_7 = new import9.InternalFormsSharedModule();
    this._FormsModule_8 = new import10.FormsModule();
    this._MdInputModule_9 = new import11.MdInputModule();
    this._MdListModule_10 = new import12.MdListModule();
    this._MdProgressBarModule_11 = new import13.MdProgressBarModule();
    this._MdProgressCircleModule_12 = new import14.MdProgressCircleModule();
    this._MdSidenavModule_13 = new import15.MdSidenavModule();
    this._PortalModule_14 = new import16.PortalModule();
    this._MdTabsModule_15 = new import17.MdTabsModule();
    this._MdToolbarModule_16 = new import18.MdToolbarModule();
    this._RtlModule_17 = new import19.RtlModule();
    this._A11yModule_18 = new import20.A11yModule();
    this._MdButtonToggleModule_19 = new import21.MdButtonToggleModule();
    this._OverlayModule_20 = new import22.OverlayModule();
    this._MdDialogModule_21 = new import23.MdDialogModule();
    this._HttpModule_22 = new import24.HttpModule();
    this._MdIconModule_23 = new import25.MdIconModule();
    this._MdMenuModule_24 = new import26.MdMenuModule();
    this._MdRadioModule_25 = new import27.MdRadioModule();
    this._MdSliderModule_26 = new import28.MdSliderModule();
    this._MdSlideToggleModule_27 = new import29.MdSlideToggleModule();
    this._MdSnackBarModule_28 = new import30.MdSnackBarModule();
    this._MdTooltipModule_29 = new import31.MdTooltipModule();
    this._StyleCompatibilityModule_30 = new import32.StyleCompatibilityModule();
    this._MaterialRootModule_31 = new import1.MaterialRootModule();
    return this._MaterialRootModule_31;
  }
  getInternal(token:any,notFoundResult:any):any {
    if ((token === import2.CommonModule)) { return this._CommonModule_0; }
    if ((token === import3.MdRippleModule)) { return this._MdRippleModule_1; }
    if ((token === import4.MdButtonModule)) { return this._MdButtonModule_2; }
    if ((token === import5.MdCardModule)) { return this._MdCardModule_3; }
    if ((token === import6.MdCheckboxModule)) { return this._MdCheckboxModule_4; }
    if ((token === import7.MdLineModule)) { return this._MdLineModule_5; }
    if ((token === import8.MdGridListModule)) { return this._MdGridListModule_6; }
    if ((token === import9.InternalFormsSharedModule)) { return this._InternalFormsSharedModule_7; }
    if ((token === import10.FormsModule)) { return this._FormsModule_8; }
    if ((token === import11.MdInputModule)) { return this._MdInputModule_9; }
    if ((token === import12.MdListModule)) { return this._MdListModule_10; }
    if ((token === import13.MdProgressBarModule)) { return this._MdProgressBarModule_11; }
    if ((token === import14.MdProgressCircleModule)) { return this._MdProgressCircleModule_12; }
    if ((token === import15.MdSidenavModule)) { return this._MdSidenavModule_13; }
    if ((token === import16.PortalModule)) { return this._PortalModule_14; }
    if ((token === import17.MdTabsModule)) { return this._MdTabsModule_15; }
    if ((token === import18.MdToolbarModule)) { return this._MdToolbarModule_16; }
    if ((token === import19.RtlModule)) { return this._RtlModule_17; }
    if ((token === import20.A11yModule)) { return this._A11yModule_18; }
    if ((token === import21.MdButtonToggleModule)) { return this._MdButtonToggleModule_19; }
    if ((token === import22.OverlayModule)) { return this._OverlayModule_20; }
    if ((token === import23.MdDialogModule)) { return this._MdDialogModule_21; }
    if ((token === import24.HttpModule)) { return this._HttpModule_22; }
    if ((token === import25.MdIconModule)) { return this._MdIconModule_23; }
    if ((token === import26.MdMenuModule)) { return this._MdMenuModule_24; }
    if ((token === import27.MdRadioModule)) { return this._MdRadioModule_25; }
    if ((token === import28.MdSliderModule)) { return this._MdSliderModule_26; }
    if ((token === import29.MdSlideToggleModule)) { return this._MdSlideToggleModule_27; }
    if ((token === import30.MdSnackBarModule)) { return this._MdSnackBarModule_28; }
    if ((token === import31.MdTooltipModule)) { return this._MdTooltipModule_29; }
    if ((token === import32.StyleCompatibilityModule)) { return this._StyleCompatibilityModule_30; }
    if ((token === import1.MaterialRootModule)) { return this._MaterialRootModule_31; }
    if ((token === import33.NgLocalization)) { return this._NgLocalization_32; }
    if ((token === import34.RadioControlRegistry)) { return this._RadioControlRegistry_33; }
    if ((token === import35.BrowserXhr)) { return this._BrowserXhr_34; }
    if ((token === import36.ResponseOptions)) { return this._ResponseOptions_35; }
    if ((token === import55.XSRFStrategy)) { return this._XSRFStrategy_36; }
    if ((token === import37.XHRBackend)) { return this._XHRBackend_37; }
    if ((token === import38.RequestOptions)) { return this._RequestOptions_38; }
    if ((token === import56.Http)) { return this._Http_39; }
    if ((token === import57.HAMMER_GESTURE_CONFIG)) { return this._HAMMER_GESTURE_CONFIG_40; }
    if ((token === import40.MdLiveAnnouncer)) { return this._MdLiveAnnouncer_41; }
    if ((token === import41.InteractivityChecker)) { return this._InteractivityChecker_42; }
    if ((token === import42.MdUniqueSelectionDispatcher)) { return this._MdUniqueSelectionDispatcher_43; }
    if ((token === import43.OverlayContainer)) { return this._OverlayContainer_44; }
    if ((token === import44.ViewportRuler)) { return this._ViewportRuler_45; }
    if ((token === import45.OverlayPositionBuilder)) { return this._OverlayPositionBuilder_46; }
    if ((token === import46.Overlay)) { return this._Overlay_47; }
    if ((token === import23.MdDialog)) { return this._MdDialog_48; }
    if ((token === import47.MdIconRegistry)) { return this._MdIconRegistry_49; }
    if ((token === import30.MdSnackBar)) { return this._MdSnackBar_50; }
    return notFoundResult;
  }
  destroyInternal():void {
  }
}
export const MaterialRootModuleNgFactory:import0.NgModuleFactory<import1.MaterialRootModule> = new import0.NgModuleFactory(MaterialRootModuleInjector,import1.MaterialRootModule);
class MaterialModuleInjector extends import0.NgModuleInjector<import1.MaterialModule> {
  _CommonModule_0:import2.CommonModule;
  _MdRippleModule_1:import3.MdRippleModule;
  _MdButtonModule_2:import4.MdButtonModule;
  _InternalFormsSharedModule_3:import9.InternalFormsSharedModule;
  _FormsModule_4:import10.FormsModule;
  _MdButtonToggleModule_5:import21.MdButtonToggleModule;
  _MdCardModule_6:import5.MdCardModule;
  _MdCheckboxModule_7:import6.MdCheckboxModule;
  _PortalModule_8:import16.PortalModule;
  _OverlayModule_9:import22.OverlayModule;
  _A11yModule_10:import20.A11yModule;
  _MdDialogModule_11:import23.MdDialogModule;
  _MdLineModule_12:import7.MdLineModule;
  _MdGridListModule_13:import8.MdGridListModule;
  _HttpModule_14:import24.HttpModule;
  _MdIconModule_15:import25.MdIconModule;
  _MdInputModule_16:import11.MdInputModule;
  _MdListModule_17:import12.MdListModule;
  _MdMenuModule_18:import26.MdMenuModule;
  _MdProgressBarModule_19:import13.MdProgressBarModule;
  _MdProgressCircleModule_20:import14.MdProgressCircleModule;
  _MdRadioModule_21:import27.MdRadioModule;
  _MdSidenavModule_22:import15.MdSidenavModule;
  _MdSliderModule_23:import28.MdSliderModule;
  _MdSlideToggleModule_24:import29.MdSlideToggleModule;
  _MdSnackBarModule_25:import30.MdSnackBarModule;
  _MdTabsModule_26:import17.MdTabsModule;
  _MdToolbarModule_27:import18.MdToolbarModule;
  _MdTooltipModule_28:import31.MdTooltipModule;
  _RtlModule_29:import19.RtlModule;
  _StyleCompatibilityModule_30:import32.StyleCompatibilityModule;
  _MaterialModule_31:import1.MaterialModule;
  __NgLocalization_32:import33.NgLocaleLocalization;
  __RadioControlRegistry_33:import34.RadioControlRegistry;
  __BrowserXhr_34:import35.BrowserXhr;
  __ResponseOptions_35:import36.BaseResponseOptions;
  __XSRFStrategy_36:any;
  __XHRBackend_37:import37.XHRBackend;
  __RequestOptions_38:import38.BaseRequestOptions;
  __Http_39:any;
  __HAMMER_GESTURE_CONFIG_40:import39.MdGestureConfig;
  constructor(parent:import48.Injector) {
    super(parent,[
      import49.MdDialogContainerNgFactory,
      import50.MdSnackBarContainerNgFactory,
      import51.SimpleSnackBarNgFactory,
      import52.TooltipComponentNgFactory
    ]
    ,([] as any[]));
  }
  get _NgLocalization_32():import33.NgLocaleLocalization {
    if ((this.__NgLocalization_32 == null)) { (this.__NgLocalization_32 = new import33.NgLocaleLocalization(this.parent.get(import53.LOCALE_ID))); }
    return this.__NgLocalization_32;
  }
  get _RadioControlRegistry_33():import34.RadioControlRegistry {
    if ((this.__RadioControlRegistry_33 == null)) { (this.__RadioControlRegistry_33 = new import34.RadioControlRegistry()); }
    return this.__RadioControlRegistry_33;
  }
  get _BrowserXhr_34():import35.BrowserXhr {
    if ((this.__BrowserXhr_34 == null)) { (this.__BrowserXhr_34 = new import35.BrowserXhr()); }
    return this.__BrowserXhr_34;
  }
  get _ResponseOptions_35():import36.BaseResponseOptions {
    if ((this.__ResponseOptions_35 == null)) { (this.__ResponseOptions_35 = new import36.BaseResponseOptions()); }
    return this.__ResponseOptions_35;
  }
  get _XSRFStrategy_36():any {
    if ((this.__XSRFStrategy_36 == null)) { (this.__XSRFStrategy_36 = import24._createDefaultCookieXSRFStrategy()); }
    return this.__XSRFStrategy_36;
  }
  get _XHRBackend_37():import37.XHRBackend {
    if ((this.__XHRBackend_37 == null)) { (this.__XHRBackend_37 = new import37.XHRBackend(this._BrowserXhr_34,this._ResponseOptions_35,this._XSRFStrategy_36)); }
    return this.__XHRBackend_37;
  }
  get _RequestOptions_38():import38.BaseRequestOptions {
    if ((this.__RequestOptions_38 == null)) { (this.__RequestOptions_38 = new import38.BaseRequestOptions()); }
    return this.__RequestOptions_38;
  }
  get _Http_39():any {
    if ((this.__Http_39 == null)) { (this.__Http_39 = import24.httpFactory(this._XHRBackend_37,this._RequestOptions_38)); }
    return this.__Http_39;
  }
  get _HAMMER_GESTURE_CONFIG_40():import39.MdGestureConfig {
    if ((this.__HAMMER_GESTURE_CONFIG_40 == null)) { (this.__HAMMER_GESTURE_CONFIG_40 = new import39.MdGestureConfig()); }
    return this.__HAMMER_GESTURE_CONFIG_40;
  }
  createInternal():import1.MaterialModule {
    this._CommonModule_0 = new import2.CommonModule();
    this._MdRippleModule_1 = new import3.MdRippleModule();
    this._MdButtonModule_2 = new import4.MdButtonModule();
    this._InternalFormsSharedModule_3 = new import9.InternalFormsSharedModule();
    this._FormsModule_4 = new import10.FormsModule();
    this._MdButtonToggleModule_5 = new import21.MdButtonToggleModule();
    this._MdCardModule_6 = new import5.MdCardModule();
    this._MdCheckboxModule_7 = new import6.MdCheckboxModule();
    this._PortalModule_8 = new import16.PortalModule();
    this._OverlayModule_9 = new import22.OverlayModule();
    this._A11yModule_10 = new import20.A11yModule();
    this._MdDialogModule_11 = new import23.MdDialogModule();
    this._MdLineModule_12 = new import7.MdLineModule();
    this._MdGridListModule_13 = new import8.MdGridListModule();
    this._HttpModule_14 = new import24.HttpModule();
    this._MdIconModule_15 = new import25.MdIconModule();
    this._MdInputModule_16 = new import11.MdInputModule();
    this._MdListModule_17 = new import12.MdListModule();
    this._MdMenuModule_18 = new import26.MdMenuModule();
    this._MdProgressBarModule_19 = new import13.MdProgressBarModule();
    this._MdProgressCircleModule_20 = new import14.MdProgressCircleModule();
    this._MdRadioModule_21 = new import27.MdRadioModule();
    this._MdSidenavModule_22 = new import15.MdSidenavModule();
    this._MdSliderModule_23 = new import28.MdSliderModule();
    this._MdSlideToggleModule_24 = new import29.MdSlideToggleModule();
    this._MdSnackBarModule_25 = new import30.MdSnackBarModule();
    this._MdTabsModule_26 = new import17.MdTabsModule();
    this._MdToolbarModule_27 = new import18.MdToolbarModule();
    this._MdTooltipModule_28 = new import31.MdTooltipModule();
    this._RtlModule_29 = new import19.RtlModule();
    this._StyleCompatibilityModule_30 = new import32.StyleCompatibilityModule();
    this._MaterialModule_31 = new import1.MaterialModule();
    return this._MaterialModule_31;
  }
  getInternal(token:any,notFoundResult:any):any {
    if ((token === import2.CommonModule)) { return this._CommonModule_0; }
    if ((token === import3.MdRippleModule)) { return this._MdRippleModule_1; }
    if ((token === import4.MdButtonModule)) { return this._MdButtonModule_2; }
    if ((token === import9.InternalFormsSharedModule)) { return this._InternalFormsSharedModule_3; }
    if ((token === import10.FormsModule)) { return this._FormsModule_4; }
    if ((token === import21.MdButtonToggleModule)) { return this._MdButtonToggleModule_5; }
    if ((token === import5.MdCardModule)) { return this._MdCardModule_6; }
    if ((token === import6.MdCheckboxModule)) { return this._MdCheckboxModule_7; }
    if ((token === import16.PortalModule)) { return this._PortalModule_8; }
    if ((token === import22.OverlayModule)) { return this._OverlayModule_9; }
    if ((token === import20.A11yModule)) { return this._A11yModule_10; }
    if ((token === import23.MdDialogModule)) { return this._MdDialogModule_11; }
    if ((token === import7.MdLineModule)) { return this._MdLineModule_12; }
    if ((token === import8.MdGridListModule)) { return this._MdGridListModule_13; }
    if ((token === import24.HttpModule)) { return this._HttpModule_14; }
    if ((token === import25.MdIconModule)) { return this._MdIconModule_15; }
    if ((token === import11.MdInputModule)) { return this._MdInputModule_16; }
    if ((token === import12.MdListModule)) { return this._MdListModule_17; }
    if ((token === import26.MdMenuModule)) { return this._MdMenuModule_18; }
    if ((token === import13.MdProgressBarModule)) { return this._MdProgressBarModule_19; }
    if ((token === import14.MdProgressCircleModule)) { return this._MdProgressCircleModule_20; }
    if ((token === import27.MdRadioModule)) { return this._MdRadioModule_21; }
    if ((token === import15.MdSidenavModule)) { return this._MdSidenavModule_22; }
    if ((token === import28.MdSliderModule)) { return this._MdSliderModule_23; }
    if ((token === import29.MdSlideToggleModule)) { return this._MdSlideToggleModule_24; }
    if ((token === import30.MdSnackBarModule)) { return this._MdSnackBarModule_25; }
    if ((token === import17.MdTabsModule)) { return this._MdTabsModule_26; }
    if ((token === import18.MdToolbarModule)) { return this._MdToolbarModule_27; }
    if ((token === import31.MdTooltipModule)) { return this._MdTooltipModule_28; }
    if ((token === import19.RtlModule)) { return this._RtlModule_29; }
    if ((token === import32.StyleCompatibilityModule)) { return this._StyleCompatibilityModule_30; }
    if ((token === import1.MaterialModule)) { return this._MaterialModule_31; }
    if ((token === import33.NgLocalization)) { return this._NgLocalization_32; }
    if ((token === import34.RadioControlRegistry)) { return this._RadioControlRegistry_33; }
    if ((token === import35.BrowserXhr)) { return this._BrowserXhr_34; }
    if ((token === import36.ResponseOptions)) { return this._ResponseOptions_35; }
    if ((token === import55.XSRFStrategy)) { return this._XSRFStrategy_36; }
    if ((token === import37.XHRBackend)) { return this._XHRBackend_37; }
    if ((token === import38.RequestOptions)) { return this._RequestOptions_38; }
    if ((token === import56.Http)) { return this._Http_39; }
    if ((token === import57.HAMMER_GESTURE_CONFIG)) { return this._HAMMER_GESTURE_CONFIG_40; }
    return notFoundResult;
  }
  destroyInternal():void {
  }
}
export const MaterialModuleNgFactory:import0.NgModuleFactory<import1.MaterialModule> = new import0.NgModuleFactory(MaterialModuleInjector,import1.MaterialModule);