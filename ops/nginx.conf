
#user  nobody;
daemon off;
worker_processes  1;

error_log /dev/stdout info;
#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;



events {
  worker_connections  1024;
}

http {
  include       mime.types;
  default_type  application/octet-stream;

  log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
  '$status $body_bytes_sent "$http_referer" '
  '"$http_user_agent" "$http_x_forwarded_for"';

  access_log /dev/stdout;

  sendfile        on;
  #tcp_nopush     on;

  #keepalive_timeout  0;
  keepalive_timeout  65;

  gzip  on;

  #Ping for kubernetes health check
  server {
    listen 3001;
    server_name _;
    return 200;
  }

  server {
    listen       3001;
    server_name  stage.icanhelpyouwiththat.org;

    location /.well-known {
      proxy_pass http://letsencrypt.default.svc.cluster.local;
    }

    if ($http_x_forwarded_proto = "http") {
      return 301 https://$host$request_uri;
    }

    location / {
      root   /var/www;
      index  index.html index.htm;
      try_files $uri /index.html;
    }


    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
        error_page   500 502 503 504  /50x.html;
    location = /50x.html {
      root   html;
    }

  }

  #Ping for kubernetes health check
  server {
    listen 3002;
    server_name _;
    return 200;
  }

  server {
    listen       3002;
    server_name  stageapi.icanhelpyouwiththat.org;

    location /.well-known {
      proxy_pass http://letsencrypt.default.svc.cluster.local;
    }

    if ($http_x_forwarded_proto = "http") {
      return 301 https://$host$request_uri;
    }

    location / {
      proxy_pass https://blog/;
      proxy_set_header Host $host;
    }
    location /favicon.ico {
      empty_gif;
      access_log    off;
      log_not_found off;
    }

  }

  include servers/*;
}
